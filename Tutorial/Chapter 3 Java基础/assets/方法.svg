<svg ed:name="方法" id="page300000106" xmlns="http://www.w3.org/2000/svg" xmlns:ed="https://www.edrawsoft.cn/xml/2017/SVGExtensions/" viewBox="0 0 2126 1150" ed:hSpacing="30" width="2126" xmlns:ev="http://www.w3.org/2001/xml-events" ed:vSpacing="30" xmlns:xlink="http://www.w3.org/1999/xlink" height="1150"><style type="text/css"><![CDATA[
g[ed\:togtopicid],g[ed\:hyperlink],g[ed\:comment],g[ed\:note] {cursor:pointer;}
g[id] {-moz-user-select: none;-ms-user-select: none;user-select: none;}
svg text::selection,svg tspan::selection{background-color: #4285f4;color: #ffffff;fill: #ffffff;}
.st29 {fill:#333333;font-family:Microsoft YaHei;font-size:9pt}
.st25 {fill:#7e8690;font-family:Microsoft YaHei;font-size:12pt;font-style:italic}
.st27 {fill:#ffffff;font-family:Microsoft YaHei;font-size:13pt;font-style:italic;font-weight:bold}
.st28 {fill:#ffffff;font-family:Microsoft YaHei;font-size:13pt;font-weight:bold}
.st26 {fill:#ffffff;font-family:Microsoft YaHei;font-size:18pt;font-style:italic;font-weight:bold}
]]></style><defs/><rect x="0" width="2126" y="0" fill="#ffffff" height="1150"/><g id="269" ed:toid="107" ed:type="relation" ed:fromid="108" transform="matrix(1,0,0,1,1128.32,275.5)"><path d="M23.1,-216.5C-24.6,-99,17.7,77.5,-23.1,216.5" fill="none"/><path stroke-width="2" stroke-dasharray="5,2" stroke-linecap="round" stroke="#f79646" d="M23.1,-216.5C-24.4,-99.5,17.3,75.9,-22.5,214.6" stroke-linejoin="round" fill="none"/><path stroke-width="2" stroke-linecap="round" stroke="#f79646" d="M-14.5,207.2L-23.1,216.5L-25.3,204.1" stroke-linejoin="round" fill="none"/><text class="st25"/></g><path stroke-width="2" ed:parentid="107" id="110" stroke-linecap="round" ed:tosuperid="109" stroke="#cacaca" d="M6.8,75.9L38.3,75.9L38.3,-69.9C38.3,-73.2,40.9,-75.9,44.3,-75.9L69.8,-75.9" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1169.25,447.11)"/><path stroke-width="2" ed:parentid="109" id="112" stroke-linecap="round" ed:tosuperid="111" stroke="#cacaca" d="M-13.5,72L0,72L0,-66C0,-69.3,2.7,-72,6,-72L13.5,-72" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1375.5,299.19)"/><path stroke-width="2" ed:parentid="111" id="114" stroke-linecap="round" ed:tosuperid="113" stroke="#cacaca" d="M-13.5,61.3L0,61.3L0,-55.3C0,-58.6,2.7,-61.3,6,-61.3L13.5,-61.3" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1471.5,165.91)"/><path stroke-width="2" ed:parentid="111" id="116" stroke-linecap="round" ed:tosuperid="115" stroke="#cacaca" d="M0,25.3L0,-19.3C0,-22.6,2.7,-25.3,6,-25.3L13.5,-25.3" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1471.5,201.91)"/><path stroke-width="2" ed:parentid="115" id="118" stroke-linecap="round" ed:tosuperid="117" stroke="#cacaca" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1555.5,176.66)"/><path stroke-width="2" ed:parentid="111" id="120" stroke-linecap="round" ed:tosuperid="119" stroke="#cacaca" d="M0,10.5L0,-4.5C0,-7.8,2.7,-10.5,6,-10.5L13.5,-10.5" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1471.5,216.66)"/><path stroke-width="2" ed:parentid="119" id="122" stroke-linecap="round" ed:tosuperid="121" stroke="#cacaca" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1579.5,206.16)"/><path stroke-width="2" ed:parentid="111" id="124" stroke-linecap="round" ed:tosuperid="123" stroke="#cacaca" d="M0,-4.3L0,-1.8C0,1.6,2.7,4.3,6,4.3L13.5,4.3" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1471.5,231.41)"/><path stroke-width="2" ed:parentid="123" id="126" stroke-linecap="round" ed:tosuperid="125" stroke="#cacaca" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1555.5,235.66)"/><path stroke-width="2" ed:parentid="111" id="128" stroke-linecap="round" ed:tosuperid="127" stroke="#cacaca" d="M0,-23.3L0,17.3C0,20.6,2.7,23.3,6,23.3L13.5,23.3" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1471.5,250.41)"/><path stroke-width="2" ed:parentid="127" id="130" stroke-linecap="round" ed:tosuperid="129" stroke="#cacaca" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1567.5,273.66)"/><path stroke-width="2" ed:parentid="111" id="132" stroke-linecap="round" ed:tosuperid="131" stroke="#cacaca" d="M0,-42.3L0,36.3C0,39.6,2.7,42.3,6,42.3L13.5,42.3" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1471.5,269.41)"/><path stroke-width="2" ed:parentid="131" id="134" stroke-linecap="round" ed:tosuperid="133" stroke="#cacaca" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1555.5,311.66)"/><path stroke-width="2" ed:parentid="111" id="136" stroke-linecap="round" ed:tosuperid="135" stroke="#cacaca" d="M0,-61.3L0,55.3C0,58.6,2.7,61.3,6,61.3L13.5,61.3" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1471.5,288.41)"/><path stroke-width="2" ed:parentid="135" id="138" stroke-linecap="round" ed:tosuperid="137" stroke="#cacaca" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1554.5,349.66)"/><path stroke-width="2" ed:parentid="109" id="140" stroke-linecap="round" ed:tosuperid="139" stroke="#cacaca" d="M0,-25.7L0,19.7C0,23,2.7,25.7,6,25.7L13.5,25.7" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1375.5,396.88)"/><path stroke-width="2" ed:parentid="139" id="142" stroke-linecap="round" ed:tosuperid="141" stroke="#cacaca" d="M-13.5,13.2L0,13.2L0,-7.2C0,-10.5,2.7,-13.2,6,-13.2L13.5,-13.2" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1483.5,409.34)"/><path stroke-width="2" ed:parentid="139" id="144" stroke-linecap="round" ed:tosuperid="143" stroke="#cacaca" d="M0,-13.2L0,7.2C0,10.5,2.7,13.2,6,13.2L13.5,13.2" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1483.5,435.72)"/><path stroke-width="2" ed:parentid="143" id="146" stroke-linecap="round" ed:tosuperid="145" stroke="#cacaca" d="M-13.5,7.4L0,7.4L0,-1.4C0,-4.7,2.7,-7.4,6,-7.4L13.5,-7.4" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1692.5,441.53)"/><path stroke-width="2" ed:parentid="145" id="148" stroke-linecap="round" ed:tosuperid="147" stroke="#cacaca" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1812.5,434.16)"/><path stroke-width="2" ed:parentid="143" id="150" stroke-linecap="round" ed:tosuperid="149" stroke="#cacaca" d="M0,-7.4L0,1.4C0,4.7,2.7,7.4,6,7.4L13.5,7.4" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1692.5,456.28)"/><path stroke-width="2" ed:parentid="149" id="152" stroke-linecap="round" ed:tosuperid="151" stroke="#cacaca" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1812.5,463.66)"/><path stroke-width="2" ed:parentid="109" id="154" stroke-linecap="round" ed:tosuperid="153" stroke="#cacaca" d="M0,-72L0,66C0,69.3,2.7,72,6,72L13.5,72" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1375.5,443.25)"/><path stroke-width="2" ed:parentid="153" id="156" stroke-linecap="round" ed:tosuperid="155" stroke="#cacaca" d="M-13.5,11.1L0,11.1L0,-5.1C0,-8.4,2.7,-11.1,6,-11.1L13.5,-11.1" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1471.5,504.22)"/><path stroke-width="2" ed:parentid="153" id="158" stroke-linecap="round" ed:tosuperid="157" stroke="#cacaca" d="M0,-11.1L0,5.1C0,8.4,2.7,11.1,6,11.1L13.5,11.1" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1471.5,526.34)"/><path stroke-width="2" ed:parentid="157" id="160" stroke-linecap="round" ed:tosuperid="159" stroke="#cacaca" d="M-13.5,7.4L0,7.4L0,-1.4C0,-4.7,2.7,-7.4,6,-7.4L13.5,-7.4" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1555.5,530.03)"/><path stroke-width="2" ed:parentid="157" id="162" stroke-linecap="round" ed:tosuperid="161" stroke="#cacaca" d="M0,-7.4L0,1.4C0,4.7,2.7,7.4,6,7.4L13.5,7.4" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1555.5,544.78)"/><path stroke-width="2" ed:parentid="107" id="164" stroke-linecap="round" ed:tosuperid="163" stroke="#cacaca" d="M6.8,-75.9L38.3,-75.9L38.3,69.9C38.3,73.2,40.9,75.9,44.3,75.9L69.8,75.9" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1169.25,598.89)"/><path stroke-width="2" ed:parentid="163" id="166" stroke-linecap="round" ed:tosuperid="165" stroke="#cacaca" d="M-13.5,17.4L0,17.4L0,-11.4C0,-14.7,2.7,-17.4,6,-17.4L13.5,-17.4" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1358.5,657.34)"/><path stroke-width="2" ed:parentid="165" id="168" stroke-linecap="round" ed:tosuperid="167" stroke="#cacaca" d="M-13.5,11.6L0,11.6L0,-5.6C0,-8.9,2.7,-11.6,6,-11.6L13.5,-11.6" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1574.5,628.28)"/><path stroke-width="2" ed:parentid="165" id="170" stroke-linecap="round" ed:tosuperid="169" stroke="#cacaca" d="M0,-11.6L0,5.6C0,8.9,2.7,11.6,6,11.6L13.5,11.6" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1574.5,651.53)"/><path stroke-width="2" ed:parentid="163" id="172" stroke-linecap="round" ed:tosuperid="171" stroke="#cacaca" d="M0,-17.4L0,11.4C0,14.7,2.7,17.4,6,17.4L13.5,17.4" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1358.5,692.22)"/><path stroke-width="2" ed:parentid="171" id="174" stroke-linecap="round" ed:tosuperid="173" stroke="#cacaca" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1519.5,709.66)"/><path stroke-width="2" ed:parentid="107" id="176" stroke-linecap="round" ed:tosuperid="175" stroke="#cacaca" d="M-6.8,-202L-38.3,-202L-38.3,196C-38.3,199.3,-40.9,202,-44.3,202L-69.8,202" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1029.75,724.97)"/><path stroke-width="2" ed:parentid="175" id="178" stroke-linecap="round" ed:tosuperid="177" stroke="#cacaca" d="M13.5,90.2L0,90.2L0,-84.2C0,-87.5,-2.7,-90.2,-6,-90.2L-13.5,-90.2" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,823.5,836.75)"/><path stroke-width="2" ed:parentid="177" id="180" stroke-linecap="round" ed:tosuperid="179" stroke="#cacaca" d="M13.5,26.4L0,26.4L0,-20.4C0,-23.7,-2.7,-26.4,-6,-26.4L-13.5,-26.4" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,691.5,720.19)"/><path stroke-width="2" ed:parentid="179" id="182" stroke-linecap="round" ed:tosuperid="181" stroke="#cacaca" d="M13.5,0L0,0C0,0,-2.7,0,-6,0L-13.5,0" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,608.5,693.81)"/><path stroke-width="2" ed:parentid="177" id="184" stroke-linecap="round" ed:tosuperid="183" stroke="#cacaca" d="M0,7.4L0,-1.4C0,-4.7,-2.7,-7.4,-6,-7.4L-13.5,-7.4" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,691.5,739.19)"/><path stroke-width="2" ed:parentid="183" id="186" stroke-linecap="round" ed:tosuperid="185" stroke="#cacaca" d="M13.5,0L0,0C0,0,-2.7,0,-6,0L-13.5,0" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,583.5,731.81)"/><path stroke-width="2" ed:parentid="177" id="188" stroke-linecap="round" ed:tosuperid="187" stroke="#cacaca" d="M0,-11.6L0,5.6C0,8.9,-2.7,11.6,-6,11.6L-13.5,11.6" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,691.5,758.19)"/><path stroke-width="2" ed:parentid="187" id="190" stroke-linecap="round" ed:tosuperid="189" stroke="#cacaca" d="M13.5,0L0,0C0,0,-2.7,0,-6,0L-13.5,0" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,586.5,769.81)"/><path stroke-width="2" ed:parentid="177" id="192" stroke-linecap="round" ed:tosuperid="191" stroke="#cacaca" d="M0,-26.4L0,20.4C0,23.7,-2.7,26.4,-6,26.4L-13.5,26.4" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,691.5,772.94)"/><path stroke-width="2" ed:parentid="191" id="194" stroke-linecap="round" ed:tosuperid="193" stroke="#cacaca" d="M13.5,0L0,0C0,0,-2.7,0,-6,0L-13.5,0" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,603.5,799.31)"/><path stroke-width="2" ed:parentid="175" id="196" stroke-linecap="round" ed:tosuperid="195" stroke="#cacaca" d="M0,26.9L0,-20.9C0,-24.2,-2.7,-26.9,-6,-26.9L-13.5,-26.9" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,823.5,900)"/><path stroke-width="2" ed:parentid="195" id="198" stroke-linecap="round" ed:tosuperid="197" stroke="#cacaca" d="M13.5,22.1L0,22.1L0,-16.1C0,-19.4,-2.7,-22.1,-6,-22.1L-13.5,-22.1" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,745.5,850.94)"/><path stroke-width="2" ed:parentid="195" id="200" stroke-linecap="round" ed:tosuperid="199" stroke="#cacaca" d="M0,0C0,0,-2.7,0,-6,0L-13.5,0" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,745.5,873.06)"/><path stroke-width="2" ed:parentid="199" id="202" stroke-linecap="round" ed:tosuperid="201" stroke="#cacaca" d="M13.5,7.4L0,7.4L0,-1.4C0,-4.7,-2.7,-7.4,-6,-7.4L-13.5,-7.4" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,553.5,865.69)"/><path stroke-width="2" ed:parentid="199" id="204" stroke-linecap="round" ed:tosuperid="203" stroke="#cacaca" d="M0,-7.4L0,1.4C0,4.7,-2.7,7.4,-6,7.4L-13.5,7.4" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,553.5,880.44)"/><path stroke-width="2" ed:parentid="195" id="206" stroke-linecap="round" ed:tosuperid="205" stroke="#cacaca" d="M0,-22.1L0,16.1C0,19.4,-2.7,22.1,-6,22.1L-13.5,22.1" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,745.5,895.19)"/><path stroke-width="2" ed:parentid="175" id="208" stroke-linecap="round" ed:tosuperid="207" stroke="#cacaca" d="M0,-9.9L0,3.9C0,7.2,-2.7,9.9,-6,9.9L-13.5,9.9" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,823.5,936.88)"/><path stroke-width="2" ed:parentid="207" id="210" stroke-linecap="round" ed:tosuperid="209" stroke="#cacaca" d="M13.5,0L0,0C0,0,-2.7,0,-6,0L-13.5,0" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,751.5,946.81)"/><path stroke-width="2" ed:parentid="175" id="212" stroke-linecap="round" ed:tosuperid="211" stroke="#cacaca" d="M0,-40.6L0,34.6C0,37.9,-2.7,40.6,-6,40.6L-13.5,40.6" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,823.5,967.5)"/><path stroke-width="2" ed:parentid="211" id="214" stroke-linecap="round" ed:tosuperid="213" stroke="#cacaca" d="M13.5,11.6L0,11.6L0,-5.6C0,-8.9,-2.7,-11.6,-6,-11.6L-13.5,-11.6" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,735.5,996.44)"/><path stroke-width="2" ed:parentid="211" id="216" stroke-linecap="round" ed:tosuperid="215" stroke="#cacaca" d="M0,-11.6L0,5.6C0,8.9,-2.7,11.6,-6,11.6L-13.5,11.6" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,735.5,1019.69)"/><path stroke-width="2" ed:parentid="175" id="218" stroke-linecap="round" ed:tosuperid="217" stroke="#cacaca" d="M0,-71.2L0,65.2C0,68.5,-2.7,71.2,-6,71.2L-13.5,71.2" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,823.5,998.13)"/><path stroke-width="2" ed:parentid="217" id="220" stroke-linecap="round" ed:tosuperid="219" stroke="#cacaca" d="M13.5,0L0,0C0,0,-2.7,0,-6,0L-13.5,0" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,728.5,1069.31)"/><path stroke-width="2" ed:parentid="175" id="222" stroke-linecap="round" ed:tosuperid="221" stroke="#cacaca" d="M0,-90.2L0,84.2C0,87.5,-2.7,90.2,-6,90.2L-13.5,90.2" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,823.5,1017.13)"/><path stroke-width="2" ed:parentid="221" id="224" stroke-linecap="round" ed:tosuperid="223" stroke="#cacaca" d="M13.5,0L0,0C0,0,-2.7,0,-6,0L-13.5,0" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,699.5,1107.31)"/><path stroke-width="2" ed:parentid="107" id="226" stroke-linecap="round" ed:tosuperid="225" stroke="#cacaca" d="M-6.8,56.2L-38.3,56.2L-38.3,-50.2C-38.3,-53.5,-40.9,-56.2,-44.3,-56.2L-69.8,-56.2" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1029.75,466.84)"/><path stroke-width="2" ed:parentid="225" id="228" stroke-linecap="round" ed:tosuperid="227" stroke="#cacaca" d="M13.5,88.2L0,88.2L0,-82.2C0,-85.5,-2.7,-88.2,-6,-88.2L-13.5,-88.2" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,840.5,322.5)"/><path stroke-width="2" ed:parentid="227" id="230" stroke-linecap="round" ed:tosuperid="229" stroke="#cacaca" d="M13.5,9.5L0,9.5L0,-3.5C0,-6.8,-2.7,-9.5,-6,-9.5L-13.5,-9.5" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,764.5,224.81)"/><path stroke-width="2" ed:parentid="227" id="232" stroke-linecap="round" ed:tosuperid="231" stroke="#cacaca" d="M0,-9.5L0,3.5C0,6.8,-2.7,9.5,-6,9.5L-13.5,9.5" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,764.5,243.81)"/><path stroke-width="2" ed:parentid="225" id="234" stroke-linecap="round" ed:tosuperid="233" stroke="#cacaca" d="M0,31.2L0,-25.2C0,-28.5,-2.7,-31.2,-6,-31.2L-13.5,-31.2" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,840.5,379.5)"/><path stroke-width="2" ed:parentid="233" id="236" stroke-linecap="round" ed:tosuperid="235" stroke="#cacaca" d="M13.5,32.8L0,32.8L0,-26.8C0,-30.1,-2.7,-32.8,-6,-32.8L-13.5,-32.8" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,744.5,315.56)"/><path stroke-width="2" ed:parentid="233" id="238" stroke-linecap="round" ed:tosuperid="237" stroke="#cacaca" d="M0,13.8L0,-7.8C0,-11.1,-2.7,-13.8,-6,-13.8L-13.5,-13.8" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,744.5,334.56)"/><path stroke-width="2" ed:parentid="233" id="240" stroke-linecap="round" ed:tosuperid="239" stroke="#cacaca" d="M0,-9.5L0,3.5C0,6.8,-2.7,9.5,-6,9.5L-13.5,9.5" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,744.5,357.81)"/><path stroke-width="2" ed:parentid="233" id="242" stroke-linecap="round" ed:tosuperid="241" stroke="#cacaca" d="M0,-32.8L0,26.8C0,30.1,-2.7,32.8,-6,32.8L-13.5,32.8" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,744.5,381.06)"/><path stroke-width="2" ed:parentid="225" id="244" stroke-linecap="round" ed:tosuperid="243" stroke="#cacaca" d="M0,-36.4L0,30.4C0,33.7,-2.7,36.4,-6,36.4L-13.5,36.4" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,840.5,447.13)"/><path stroke-width="2" ed:parentid="243" id="246" stroke-linecap="round" ed:tosuperid="245" stroke="#cacaca" d="M13.5,11.6L0,11.6L0,-5.6C0,-8.9,-2.7,-11.6,-6,-11.6L-13.5,-11.6" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,744.5,471.94)"/><path stroke-width="2" ed:parentid="243" id="248" stroke-linecap="round" ed:tosuperid="247" stroke="#cacaca" d="M0,-11.6L0,5.6C0,8.9,-2.7,11.6,-6,11.6L-13.5,11.6" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,744.5,495.19)"/><path stroke-width="2" ed:parentid="225" id="250" stroke-linecap="round" ed:tosuperid="249" stroke="#cacaca" d="M0,-88.2L0,82.2C0,85.5,-2.7,88.2,-6,88.2L-13.5,88.2" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,840.5,498.88)"/><path stroke-width="2" ed:parentid="249" id="252" stroke-linecap="round" ed:tosuperid="251" stroke="#cacaca" d="M13.5,21.1L0,21.1L0,-15.1C0,-18.4,-2.7,-21.1,-6,-21.1L-13.5,-21.1" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,752.5,565.94)"/><path stroke-width="2" ed:parentid="249" id="254" stroke-linecap="round" ed:tosuperid="253" stroke="#cacaca" d="M0,2.1C0,-0.2,-2.7,-2.1,-6,-2.1L-13.5,-2.1" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,752.5,584.94)"/><path stroke-width="2" ed:parentid="249" id="256" stroke-linecap="round" ed:tosuperid="255" stroke="#cacaca" d="M0,-21.1L0,15.1C0,18.4,-2.7,21.1,-6,21.1L-13.5,21.1" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,752.5,608.19)"/><path stroke-width="2" ed:parentid="255" id="258" stroke-linecap="round" ed:tosuperid="257" stroke="#cacaca" d="M13.5,0L0,0C0,0,-2.7,0,-6,0L-13.5,0" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,551.5,629.31)"/><path stroke-width="2" ed:parentid="107" id="260" stroke-linecap="round" ed:tosuperid="259" stroke="#cacaca" d="M-6.8,202L-38.3,202L-38.3,-196C-38.3,-199.3,-40.9,-202,-44.3,-202L-69.8,-202" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,1029.75,321.03)"/><path stroke-width="2" ed:parentid="259" id="262" stroke-linecap="round" ed:tosuperid="261" stroke="#cacaca" d="M13.5,11.6L0,11.6L0,-5.6C0,-8.9,-2.7,-11.6,-6,-11.6L-13.5,-11.6" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,823.5,107.44)"/><path stroke-width="2" ed:parentid="261" id="264" stroke-linecap="round" ed:tosuperid="263" stroke="#cacaca" d="M13.5,0L0,0C0,0,-2.7,0,-6,0L-13.5,0" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,751.5,95.81)"/><path stroke-width="2" ed:parentid="259" id="266" stroke-linecap="round" ed:tosuperid="265" stroke="#cacaca" d="M0,-11.6L0,5.6C0,8.9,-2.7,11.6,-6,11.6L-13.5,11.6" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,823.5,130.69)"/><path stroke-width="2" ed:parentid="265" id="268" stroke-linecap="round" ed:tosuperid="267" stroke="#cacaca" d="M13.5,0L0,0C0,0,-2.7,0,-6,0L-13.5,0" stroke-linejoin="round" fill="none" transform="matrix(1,0,0,1,751.5,142.31)"/><g id="107" ed:height="62" ed:layout="map" transform="matrix(1,0,0,1,1023,492)" ed:width="153" ed:topictype="mainidea"><path d="M4,0L149,0C151.7,0,153,1.3,153,4L153,58C153,60.7,151.7,62,149,62L4,62C1.3,62,0,60.7,0,58L0,4C0,1.3,1.3,0,4,0z" stroke="#475d74" stroke-linejoin="round" fill="#b3a2c7"/><text class="st26"><tspan x="20" textLength="108" y="39.7" style="white-space:pre">Java 方法</tspan></text></g><g id="108" ed:height="40" ed:layout="rightmap" transform="matrix(1,0,0,1,933.5,19)" ed:width="452" ed:topictype="floating"><path d="M4,0L448,0C450.7,0,452,1.3,452,4L452,36C452,38.7,450.7,40,448,40L4,40C1.3,40,0,38.7,0,36L0,4C0,1.3,1.3,0,4,0z" stroke="#475d74" stroke-linejoin="round" fill="#bfbfbf"/><text class="st27"><tspan x="18" textLength="414" y="25.7" style="white-space:pre">方法（有的人喜欢叫函数）是一段可重用的代码段。</tspan></text></g><g ed:parentid="107" id="109" ed:height="40" ed:layout="rightmap" transform="matrix(1,0,0,1,1239,351.22)" ed:width="123"><path d="M4,0L119,0C121.7,0,123,1.3,123,4L123,36C123,38.7,121.7,40,119,40L4,40C1.3,40,0,38.7,0,36L0,4C0,1.3,1.3,0,4,0z" stroke="#475d74" stroke-linejoin="round" fill="#72cdf9"/><text class="st28"><tspan x="18" textLength="85" y="24.7" style="white-space:pre">方法的使用</tspan></text></g><g ed:parentid="109" id="111" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1389,215.66)" ed:width="69"><text class="st29"><tspan x="9" textLength="48" y="14.7" style="white-space:pre">方法定义</tspan></text></g><g ed:parentid="111" id="113" ed:height="108" ed:layout="rightmap" transform="matrix(1,0,0,1,1485,50.66)" ed:width="261"><path stroke="#cacaca" d="M0,0L261,0L261,108L0,108L0,0z" stroke-linejoin="round" fill="none"/><text class="st29"><tspan x="9" textLength="240" y="14.7" style="white-space:pre">修饰符 返回值类型 方法名(参数类型 参数名){</tspan><tspan x="9" textLength="9" y="31.7" style="white-space:pre">...</tspan><tspan x="9" textLength="36" y="48.7" style="white-space:pre">方法体</tspan><tspan x="9" textLength="9" y="65.7" style="white-space:pre">...</tspan><tspan x="9" textLength="78" y="82.7" style="white-space:pre">return 返回值;</tspan><tspan x="9" textLength="4" y="99.7" style="white-space:pre">}</tspan></text></g><g ed:parentid="111" id="115" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1485,165.16)" ed:width="57"><text class="st29"><tspan x="9" textLength="36" y="14.7" style="white-space:pre">修饰符</tspan></text></g><g ed:parentid="115" id="117" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1569,165.16)" ed:width="429"><text class="st29"><tspan x="9" textLength="408" y="14.7" style="white-space:pre">修饰符是可选的，它告诉编译器如何调用该方法。定义了该方法的访问类型。</tspan></text></g><g ed:parentid="111" id="119" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1485,194.66)" ed:width="81"><text class="st29"><tspan x="9" textLength="60" y="14.7" style="white-space:pre">返回值类型</tspan></text></g><g ed:parentid="119" id="121" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1593,194.66)" ed:width="494"><text class="st29"><tspan x="9" textLength="473" y="14.7" style="white-space:pre">返回值类型表示方法执行结束后，返回结果的数据类型。如果没有返回值，应设为 void。</tspan></text></g><g ed:parentid="111" id="123" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1485,224.16)" ed:width="57"><text class="st29"><tspan x="9" textLength="36" y="14.7" style="white-space:pre">方法名</tspan></text></g><g ed:parentid="123" id="125" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1569,224.16)" ed:width="321"><text class="st29"><tspan x="9" textLength="300" y="14.7" style="white-space:pre">是方法的实际名称。方法名和参数表共同构成方法签名。</tspan></text></g><g ed:parentid="111" id="127" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1485,262.16)" ed:width="69"><text class="st29"><tspan x="9" textLength="48" y="14.7" style="white-space:pre">参数类型</tspan></text></g><g ed:parentid="127" id="129" ed:height="40" ed:layout="rightmap" transform="matrix(1,0,0,1,1581,253.66)" ed:width="517"><text class="st29"><tspan x="9" textLength="492" y="14.7" style="white-space:pre">参数像是一个占位符。当方法被调用时，传递值给参数。参数列表是指方法的参数类型、顺序</tspan><tspan x="9" textLength="312" y="31.7" style="white-space:pre">和参数的个数。参数是可选的，方法可以不包含任何参数。</tspan></text></g><g ed:parentid="111" id="131" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1485,300.16)" ed:width="57"><text class="st29"><tspan x="9" textLength="36" y="14.7" style="white-space:pre">方法体</tspan></text></g><g ed:parentid="131" id="133" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1569,300.16)" ed:width="261"><text class="st29"><tspan x="9" textLength="240" y="14.7" style="white-space:pre">方法体包含具体的语句，定义该方法的功能。</tspan></text></g><g ed:parentid="111" id="135" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1485,338.16)" ed:width="56"><text class="st29"><tspan x="9" textLength="35" y="14.7" style="white-space:pre">return</tspan></text></g><g ed:parentid="135" id="137" ed:height="40" ed:layout="rightmap" transform="matrix(1,0,0,1,1568,329.66)" ed:width="517"><text class="st29"><tspan x="9" textLength="492" y="14.7" style="white-space:pre">必须返回声明方法时返回值类型相同的数据类型。在 void 方法中，return 语句可有可无，如</tspan><tspan x="9" textLength="241" y="31.7" style="white-space:pre">果要写 return，则只能是 return; 这种形式。</tspan></text></g><g ed:parentid="109" id="139" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1389,411.03)" ed:width="81"><text class="st29"><tspan x="9" textLength="60" y="14.7" style="white-space:pre">方法的调用</tspan></text></g><g ed:parentid="139" id="141" ed:height="40" ed:layout="rightmap" transform="matrix(1,0,0,1,1497,376.16)" ed:width="517"><text class="st29"><tspan x="9" textLength="492" y="14.7" style="white-space:pre">当程序调用一个方法时，程序的控制权交给了被调用的方法。当被调用方法的返回语句执行或</tspan><tspan x="9" textLength="240" y="31.7" style="white-space:pre">者到达方法体闭括号时候交还控制权给程序。</tspan></text></g><g ed:parentid="139" id="143" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1497,437.41)" ed:width="182"><text class="st29"><tspan x="9" textLength="161" y="14.7" style="white-space:pre">Java 支持两种调用方法的方式</tspan></text></g><g ed:parentid="143" id="145" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1706,422.66)" ed:width="93"><text class="st29"><tspan x="9" textLength="72" y="14.7" style="white-space:pre">有返回值方法</tspan></text></g><g ed:parentid="145" id="147" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1826,422.66)" ed:width="161"><path stroke="#cacaca" d="M0,0L161,0L161,23L0,23L0,0z" stroke-linejoin="round" fill="none"/><text class="st29"><tspan x="9" textLength="140" y="14.7" style="white-space:pre">int larger = max(30, 40);</tspan></text></g><g ed:parentid="143" id="149" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1706,452.16)" ed:width="93"><text class="st29"><tspan x="9" textLength="72" y="14.7" style="white-space:pre">无返回值方法</tspan></text></g><g ed:parentid="149" id="151" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1826,452.16)" ed:width="215"><path stroke="#cacaca" d="M0,0L215,0L215,23L0,23L0,0z" stroke-linejoin="round" fill="none"/><text class="st29"><tspan x="9" textLength="194" y="14.7" style="white-space:pre">System.out.println("Hello World");</tspan></text></g><g ed:parentid="109" id="153" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1389,503.78)" ed:width="69"><text class="st29"><tspan x="9" textLength="48" y="14.7" style="white-space:pre">递归调用</tspan></text></g><g ed:parentid="153" id="155" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1485,481.66)" ed:width="278"><text class="st29"><tspan x="9" textLength="257" y="14.7" style="white-space:pre">Java 支持方法的递归调用（即方法调用自身）。</tspan></text></g><g ed:parentid="153" id="157" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1485,525.91)" ed:width="57"><text class="st29"><tspan x="9" textLength="36" y="14.7" style="white-space:pre">注意点</tspan></text></g><g ed:parentid="157" id="159" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1569,511.16)" ed:width="201"><text class="st29"><tspan x="9" textLength="180" y="14.7" style="white-space:pre">递归方法必须有明确的结束条件。</tspan></text></g><g ed:parentid="157" id="161" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1569,540.66)" ed:width="405"><text class="st29"><tspan x="9" textLength="384" y="14.7" style="white-space:pre">尽量避免使用递归调用。因为递归调用如果处理不当，可能导致栈溢出。</tspan></text></g><g ed:parentid="107" id="163" ed:height="40" ed:layout="rightmap" transform="matrix(1,0,0,1,1239,654.78)" ed:width="106"><path d="M4,0L102,0C104.7,0,106,1.3,106,4L106,36C106,38.7,104.7,40,102,40L4,40C1.3,40,0,38.7,0,36L0,4C0,1.3,1.3,0,4,0z" stroke="#475d74" stroke-linejoin="round" fill="#72cdf9"/><text class="st28"><tspan x="18" textLength="68" y="24.7" style="white-space:pre">方法参数</tspan></text></g><g ed:parentid="163" id="165" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1372,628.41)" ed:width="189"><text class="st29"><tspan x="9" textLength="168" y="14.7" style="white-space:pre">方法的参数传递一般有两种形式</tspan></text></g><g ed:parentid="165" id="167" ed:height="40" ed:layout="rightmap" transform="matrix(1,0,0,1,1588,596.66)" ed:width="517"><text class="st29"><tspan x="9" textLength="493" y="14.7" style="white-space:pre">值传递 - 值传递的参数被称为形参。值传递时，传入的参数，在方法中的修改，不会在方法外</tspan><tspan x="9" textLength="48" y="31.7" style="white-space:pre">部生效。</tspan></text></g><g ed:parentid="165" id="169" ed:height="40" ed:layout="rightmap" transform="matrix(1,0,0,1,1588,643.16)" ed:width="517"><text class="st29"><tspan x="9" textLength="493" y="14.7" style="white-space:pre">引用传递 - 引用传递的参数被称为实参。引用传递时，传入的参数，在方法中的修改，会在方</tspan><tspan x="9" textLength="72" y="31.7" style="white-space:pre">法外部生效。</tspan></text></g><g ed:parentid="163" id="171" ed:height="23" ed:layout="rightmap" transform="matrix(1,0,0,1,1372,698.16)" ed:width="134"><text class="st29"><tspan x="9" textLength="113" y="14.7" style="white-space:pre">Java 中只有值传递。</tspan></text></g><g ed:parentid="171" id="173" ed:height="40" ed:layout="rightmap" transform="matrix(1,0,0,1,1533,689.66)" ed:width="517"><text class="st29"><tspan x="9" textLength="485" y="14.7" style="white-space:pre">Java 对于基本数据类型，会直接拷贝值传递到方法中；对于引用数据类型，拷贝当前对象的</tspan><tspan x="9" textLength="288" y="31.7" style="white-space:pre">引用地址，然后把该地址传递过去，所以也是值传递。</tspan></text></g><g ed:parentid="107" id="175" ed:height="40" ed:layout="leftmap" transform="matrix(1,0,0,1,837,906.94)" ed:width="123"><path d="M4,0L119,0C121.7,0,123,1.3,123,4L123,36C123,38.7,121.7,40,119,40L4,40C1.3,40,0,38.7,0,36L0,4C0,1.3,1.3,0,4,0z" stroke="#475d74" stroke-linejoin="round" fill="#72cdf9"/><text class="st28"><tspan x="18" textLength="85" y="24.7" style="white-space:pre">方法修饰符</tspan></text></g><g ed:parentid="175" id="177" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,705,735.06)" ed:width="105"><text class="st29"><tspan x="9" textLength="84" y="14.7" style="white-space:pre">访问控制修饰符</tspan></text></g><g ed:parentid="177" id="179" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,622,682.31)" ed:width="56"><text class="st29"><tspan x="9" textLength="35" y="14.7" style="white-space:pre">public</tspan></text></g><g ed:parentid="179" id="181" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,442,682.31)" ed:width="153"><text class="st29"><tspan x="9" textLength="132" y="14.7" style="white-space:pre">表示任何类都可以访问；</tspan></text></g><g ed:parentid="177" id="183" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,597,720.31)" ed:width="81"><text class="st29"><tspan x="9" textLength="60" y="14.7" style="white-space:pre">包访问权限</tspan></text></g><g ed:parentid="183" id="185" ed:height="40" ed:layout="leftmap" transform="matrix(1,0,0,1,53,711.81)" ed:width="517"><text class="st29"><tspan x="9" textLength="492" y="14.7" style="white-space:pre">包访问权限，没有任何关键字。它表示当前包中的所有其他类都可以访问，但是其它包的类无</tspan><tspan x="9" textLength="48" y="31.7" style="white-space:pre">法访问。</tspan></text></g><g ed:parentid="177" id="187" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,600,758.31)" ed:width="78"><text class="st29"><tspan x="9" textLength="57" y="14.7" style="white-space:pre">protected</tspan></text></g><g ed:parentid="187" id="189" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,108,758.31)" ed:width="465"><text class="st29"><tspan x="9" textLength="444" y="14.7" style="white-space:pre">表示子类可以访问，此外，同一个包内的其他类也可以访问，即使这些类不是子类。</tspan></text></g><g ed:parentid="177" id="191" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,617,787.81)" ed:width="61"><text class="st29"><tspan x="9" textLength="40" y="14.7" style="white-space:pre">private</tspan></text></g><g ed:parentid="191" id="193" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,413,787.81)" ed:width="177"><text class="st29"><tspan x="9" textLength="156" y="14.7" style="white-space:pre">表示其它任何类都无法访问。</tspan></text></g><g ed:parentid="175" id="195" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,759,861.56)" ed:width="51"><text class="st29"><tspan x="9" textLength="30" y="14.7" style="white-space:pre">static</tspan></text></g><g ed:parentid="195" id="197" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,505,817.31)" ed:width="227"><text class="st29"><tspan x="9" textLength="206" y="14.7" style="white-space:pre">被 static 修饰的方法被称为静态方法。</tspan></text></g><g ed:parentid="195" id="199" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,567,861.56)" ed:width="165"><text class="st29"><tspan x="9" textLength="144" y="14.7" style="white-space:pre">静态方法和普通方法的区别</tspan></text></g><g ed:parentid="199" id="201" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,339,846.81)" ed:width="201"><text class="st29"><tspan x="9" textLength="180" y="14.7" style="white-space:pre">调用静态方法可以无需创建对象。</tspan></text></g><g ed:parentid="199" id="203" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,243,876.31)" ed:width="297"><text class="st29"><tspan x="9" textLength="276" y="14.7" style="white-space:pre">静态方法在访问本类的成员时，只允许访问静态成员</tspan></text></g><g ed:parentid="195" id="205" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,471,905.81)" ed:width="261"><text class="st29"><tspan x="9" textLength="240" y="14.7" style="white-space:pre">静态方法常被用于各种工具类、工厂方法类。</tspan></text></g><g ed:parentid="175" id="207" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,765,935.31)" ed:width="45"><text class="st29"><tspan x="9" textLength="24" y="14.7" style="white-space:pre">final</tspan></text></g><g ed:parentid="207" id="209" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,442,935.31)" ed:width="296"><text class="st29"><tspan x="9" textLength="275" y="14.7" style="white-space:pre">被 final 修饰的方法不能被子类覆写（Override）。</tspan></text></g><g ed:parentid="175" id="211" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,749,996.56)" ed:width="61"><text class="st29"><tspan x="9" textLength="40" y="14.7" style="white-space:pre">default</tspan></text></g><g ed:parentid="211" id="213" ed:height="40" ed:layout="leftmap" transform="matrix(1,0,0,1,205,964.81)" ed:width="517"><text class="st29"><tspan x="9" textLength="464" y="14.7" style="white-space:pre">JDK8 开始，支持在接口 Interface 中定义 default 方法。default 方法只能出现在接口 </tspan><tspan x="9" textLength="79" y="31.7" style="white-space:pre">Interface 中。</tspan></text></g><g ed:parentid="211" id="215" ed:height="40" ed:layout="leftmap" transform="matrix(1,0,0,1,205,1011.31)" ed:width="517"><text class="st29"><tspan x="9" textLength="491" y="14.7" style="white-space:pre">接口中被 default 修饰的方法被称为默认方法，实现此接口的类如果没 Override 此方法，则</tspan><tspan x="9" textLength="252" y="31.7" style="white-space:pre">直接继承这个方法，不再强制必须实现此方法。</tspan></text></g><g ed:parentid="175" id="217" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,742,1057.81)" ed:width="68"><text class="st29"><tspan x="9" textLength="47" y="14.7" style="white-space:pre">abstract</tspan></text></g><g ed:parentid="217" id="219" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,219,1057.81)" ed:width="496"><text class="st29"><tspan x="9" textLength="475" y="14.7" style="white-space:pre">被 abstract 修饰的方法被称为抽象方法，方法不能有实体。抽象方法只能出现抽象类中。</tspan></text></g><g ed:parentid="175" id="221" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,713,1095.81)" ed:width="97"><text class="st29"><tspan x="9" textLength="76" y="14.7" style="white-space:pre">synchronized</tspan></text></g><g ed:parentid="221" id="223" ed:height="40" ed:layout="leftmap" transform="matrix(1,0,0,1,169,1087.31)" ed:width="517"><text class="st29"><tspan x="9" textLength="488" y="14.7" style="white-space:pre">synchronized 用于并发编程。被 synchronized 修饰的方法在一个时刻，只允许一个线程执</tspan><tspan x="9" textLength="24" y="31.7" style="white-space:pre">行。</tspan></text></g><g ed:parentid="107" id="225" ed:height="40" ed:layout="leftmap" transform="matrix(1,0,0,1,854,390.69)" ed:width="106"><path d="M4,0L102,0C104.7,0,106,1.3,106,4L106,36C106,38.7,104.7,40,102,40L4,40C1.3,40,0,38.7,0,36L0,4C0,1.3,1.3,0,4,0z" stroke="#475d74" stroke-linejoin="round" fill="#72cdf9"/><text class="st28"><tspan x="18" textLength="68" y="24.7" style="white-space:pre">特殊方法</tspan></text></g><g ed:parentid="225" id="227" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,778,222.81)" ed:width="49"><text class="st29"><tspan x="9" textLength="28" y="14.7" style="white-space:pre">main</tspan></text></g><g ed:parentid="227" id="229" ed:height="40" ed:layout="leftmap" transform="matrix(1,0,0,1,234,195.31)" ed:width="517"><text class="st29"><tspan x="9" textLength="494" y="14.7" style="white-space:pre">Java 中的 main 方法是一种特殊的静态方法，因为所有的 Java 程序都是由 main 方法开始执</tspan><tspan x="9" textLength="24" y="31.7" style="white-space:pre">行。</tspan></text></g><g ed:parentid="227" id="231" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,520,241.81)" ed:width="231"><path stroke="#cacaca" d="M0,0L231,0L231,23L0,23L0,0z" stroke-linejoin="round" fill="none"/><text class="st29"><tspan x="9" textLength="210" y="14.7" style="white-space:pre">public static void main(String[] args)</tspan></text></g><g ed:parentid="225" id="233" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,758,336.81)" ed:width="69"><text class="st29"><tspan x="9" textLength="48" y="14.7" style="white-space:pre">构造方法</tspan></text></g><g ed:parentid="233" id="235" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,278,271.31)" ed:width="453"><text class="st29"><tspan x="9" textLength="432" y="14.7" style="white-space:pre">任何类都有构造方法，构造方法的作用就是在初始化类实例时，设置实例的状态。</tspan></text></g><g ed:parentid="233" id="237" ed:height="40" ed:layout="leftmap" transform="matrix(1,0,0,1,214,300.81)" ed:width="517"><text class="st29"><tspan x="9" textLength="485" y="14.7" style="white-space:pre">每个类都有构造方法。如果没有显式地为类定义任何构造方法，Java 编译器将会为该类提供</tspan><tspan x="9" textLength="108" y="31.7" style="white-space:pre">一个默认构造方法。</tspan></text></g><g ed:parentid="233" id="239" ed:height="40" ed:layout="leftmap" transform="matrix(1,0,0,1,214,347.31)" ed:width="517"><text class="st29"><tspan x="9" textLength="492" y="14.7" style="white-space:pre">在创建一个对象的时候，至少要调用一个构造方法。构造方法的名称必须与类同名，一个类可</tspan><tspan x="9" textLength="108" y="31.7" style="white-space:pre">以有多个构造方法。</tspan></text></g><g ed:parentid="233" id="241" ed:height="40" ed:layout="leftmap" transform="matrix(1,0,0,1,214,393.81)" ed:width="517"><text class="st29"><tspan x="9" textLength="495" y="14.7" style="white-space:pre">构造方法除了使用 public，也可以使用 private 修饰，这种情况下，类无法调用此构造方法去</tspan><tspan x="9" textLength="264" y="31.7" style="white-space:pre">实例化对象，这常常用于设计模式中的单例模式。</tspan></text></g><g ed:parentid="225" id="243" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,758,472.06)" ed:width="69"><text class="st29"><tspan x="9" textLength="48" y="14.7" style="white-space:pre">变参方法</tspan></text></g><g ed:parentid="243" id="245" ed:height="40" ed:layout="leftmap" transform="matrix(1,0,0,1,214,440.31)" ed:width="517"><text class="st29"><tspan x="9" textLength="494" y="14.7" style="white-space:pre">JDK5 开始，Java 支持传递同类型的可变参数给一个方法。在方法声明中，在指定参数类型后</tspan><tspan x="9" textLength="97" y="31.7" style="white-space:pre">加一个省略号 ...。</tspan></text></g><g ed:parentid="243" id="247" ed:height="40" ed:layout="leftmap" transform="matrix(1,0,0,1,214,486.81)" ed:width="517"><text class="st29"><tspan x="9" textLength="492" y="14.7" style="white-space:pre">一个方法中只能指定一个可变参数，它必须是方法的最后一个参数。任何普通的参数必须在它</tspan><tspan x="9" textLength="60" y="31.7" style="white-space:pre">之前声明。</tspan></text></g><g ed:parentid="225" id="249" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,766,575.56)" ed:width="61"><text class="st29"><tspan x="9" textLength="40" y="14.7" style="white-space:pre">finalize</tspan></text></g><g ed:parentid="249" id="251" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,342,533.31)" ed:width="397"><text class="st29"><tspan x="9" textLength="376" y="14.7" style="white-space:pre">finalize 在对象被垃圾收集器析构(回收)之前调用，用来清除回收对象。</tspan></text></g><g ed:parentid="249" id="253" ed:height="40" ed:layout="leftmap" transform="matrix(1,0,0,1,222,562.81)" ed:width="517"><text class="st29"><tspan x="9" textLength="496" y="14.7" style="white-space:pre">finalize 是在 java.lang.Object 里定义的，也就是说每一个对象都有这么个方法。这个方法在 </tspan><tspan x="9" textLength="213" y="31.7" style="white-space:pre">GC 启动，该对象被回收的时候被调用。</tspan></text></g><g ed:parentid="249" id="255" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,565,617.81)" ed:width="174"><text class="st29"><tspan x="9" textLength="153" y="14.7" style="white-space:pre">应该尽量避免使用 finalizer()</tspan></text></g><g ed:parentid="255" id="257" ed:height="40" ed:layout="leftmap" transform="matrix(1,0,0,1,21,609.31)" ed:width="517"><text class="st29"><tspan x="9" textLength="491" y="14.7" style="white-space:pre">Finalizer 线程会和我们的主线程进行竞争，不过由于它的优先级较低，获取到的 CPU 时间较</tspan><tspan x="9" textLength="482" y="31.7" style="white-space:pre">少，因此它永远也赶不上主线程的步伐。所以最后可能会发生 OutOfMemoryError 异常。</tspan></text></g><g ed:parentid="107" id="259" ed:height="40" ed:layout="leftmap" transform="matrix(1,0,0,1,837,99.06)" ed:width="123"><path d="M4,0L119,0C121.7,0,123,1.3,123,4L123,36C123,38.7,121.7,40,119,40L4,40C1.3,40,0,38.7,0,36L0,4C0,1.3,1.3,0,4,0z" stroke="#475d74" stroke-linejoin="round" fill="#72cdf9"/><text class="st28"><tspan x="18" textLength="85" y="24.7" style="white-space:pre">覆写和重载</tspan></text></g><g ed:parentid="259" id="261" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,765,84.31)" ed:width="45"><text class="st29"><tspan x="9" textLength="24" y="14.7" style="white-space:pre">覆写</tspan></text></g><g ed:parentid="261" id="263" ed:height="40" ed:layout="leftmap" transform="matrix(1,0,0,1,221,75.81)" ed:width="517"><text class="st29"><tspan x="9" textLength="495" y="14.7" style="white-space:pre">覆写（Override）是指子类定义了与父类中同名的方法，但是在方法覆写时必须考虑到访问权</tspan><tspan x="9" textLength="312" y="31.7" style="white-space:pre">限，子类覆写的方法不能拥有比父类更加严格的访问权限。</tspan></text></g><g ed:parentid="259" id="265" ed:height="23" ed:layout="leftmap" transform="matrix(1,0,0,1,765,130.81)" ed:width="45"><text class="st29"><tspan x="9" textLength="24" y="14.7" style="white-space:pre">重载</tspan></text></g><g ed:parentid="265" id="267" ed:height="40" ed:layout="leftmap" transform="matrix(1,0,0,1,221,122.31)" ed:width="517"><text class="st29"><tspan x="9" textLength="486" y="14.7" style="white-space:pre">方法的重载（Overload）是指方法名称相同，但参数的类型或参数的个数不同。通过传递参</tspan><tspan x="9" textLength="288" y="31.7" style="white-space:pre">数的个数及类型的不同可以完成不同功能的方法调用。</tspan></text></g></svg>