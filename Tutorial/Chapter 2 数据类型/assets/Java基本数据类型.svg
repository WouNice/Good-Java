<svg id="page300000101" xmlns:xlink="http://www.w3.org/1999/xlink" ed:vSpacing="30" ed:name="数据类型" ed:hSpacing="30" xmlns="http://www.w3.org/2000/svg" height="1449" xmlns:ev="http://www.w3.org/2001/xml-events" width="1351" xmlns:ed="https://www.edrawsoft.cn/xml/2017/SVGExtensions/" viewBox="0 0 1351 1449"><style type="text/css"><![CDATA[
g[ed\:togtopicid],g[ed\:hyperlink],g[ed\:comment],g[ed\:note] {cursor:pointer;}
g[id] {-moz-user-select: none;-ms-user-select: none;user-select: none;}
svg text::selection,svg tspan::selection{background-color: #4285f4;color: #ffffff;fill: #ffffff;}
.st3 {fill:#333333;font-family:Microsoft YaHei;font-size:9pt}
.st4 {fill:#739e73;font-family:Microsoft YaHei;font-size:11pt;font-style:italic}
.st2 {fill:#ffffff;font-family:Microsoft YaHei;font-size:13pt;font-weight:bold}
.st1 {fill:#ffffff;font-family:Microsoft YaHei;font-size:18pt;font-style:italic;font-weight:bold}
]]></style><defs/><rect y="0" fill="#ffffff" x="0" height="1449" width="1351"/><path id="109" stroke-width="2" fill="#808080" ed:parentid="116,120,124" stroke="#808080" d="M0.1,82C2.2,81.5,5.9,79.5,7,72C7.6,67.9,6.6,63.1,5.5,59.9C4.4,56.7,4.2,55.1,4.3,53C4.4,50.9,5.9,45.9,11.4,41.5C11.6,41.3,11.8,41.2,12,41C11.9,40.9,11.6,40.6,11.4,40.5C11.2,40.3,4.7,35.2,4.3,29C4.2,26.9,4.7,24.8,5.5,22.1C6.3,19.4,7.6,15.6,7,10C6.4,4.3,3.3,0.7,0,0C4.9,2.2,5.3,10.7,4.8,14.5C4.3,18.3,2.9,22.9,2.5,24.6C2.1,26.4,1.4,29.6,4.4,34.5C7.5,39.4,11.7,41,11.7,41C11.7,41,7,43.2,4.4,47.5C1.9,51.8,1.8,54.7,2.5,57.4C3.2,60.1,4.4,64,4.8,67.5C5.2,70.9,5.2,79.6,0.1,82z" ed:idlist="116,118,118,120,122,122,124,126,126" transform="matrix(1,0,0,1,1016,56.5)" stroke-linejoin="round" ed:type="summary"/><path id="110" stroke-width="2" fill="#808080" ed:parentid="128,132" stroke="#808080" d="M0.1,52.5C2.2,52.2,5.9,50.9,7,46.1C7.6,43.5,6.6,40.4,5.5,38.4C4.4,36.3,4.2,35.3,4.3,33.9C4.4,32.6,5.9,29.4,11.4,26.6C11.6,26.5,11.8,26.4,12,26.3C11.9,26.2,11.6,26,11.4,25.9C11.2,25.8,4.7,22.5,4.3,18.6C4.2,17.2,4.7,15.9,5.5,14.1C6.3,12.4,7.6,10,7,6.4C6.4,2.8,3.3,0.4,0,0C4.9,1.4,5.3,6.9,4.8,9.3C4.3,11.7,2.9,14.6,2.5,15.8C2.1,16.9,1.4,18.9,4.4,22.1C7.5,25.2,11.7,26.3,11.7,26.3C11.7,26.3,7,27.7,4.4,30.4C1.9,33.2,1.8,35,2.5,36.8C3.2,38.5,4.4,41,4.8,43.2C5.2,45.4,5.2,50.9,0.1,52.5z" ed:idlist="128,130,130,132,134,134" transform="matrix(1,0,0,1,1041,145)" stroke-linejoin="round" ed:type="summary"/><path id="111" stroke-width="2" fill="#808080" ed:parentid="112" stroke="#808080" d="M0.1,23C2.2,22.9,5.9,22.3,7,20.2C7.6,19,6.6,17.7,5.5,16.8C4.4,15.9,4.2,15.5,4.3,14.9C4.4,14.3,5.9,12.9,11.4,11.6C11.6,11.6,11.8,11.6,12,11.5C11.9,11.5,11.6,11.4,11.4,11.4C11.2,11.3,4.7,9.9,4.3,8.1C4.2,7.5,4.7,7,5.5,6.2C6.3,5.4,7.6,4.4,7,2.8C6.4,1.2,3.3,0.2,0,0C4.9,0.6,5.3,3,4.8,4.1C4.3,5.1,2.9,6.4,2.5,6.9C2.1,7.4,1.4,8.3,4.4,9.7C7.5,11,11.7,11.5,11.7,11.5C11.7,11.5,7,12.1,4.4,13.3C1.9,14.5,1.8,15.3,2.5,16.1C3.2,16.9,4.4,17.9,4.8,18.9C5.2,19.9,5.2,22.3,0.1,23z" ed:idlist="112,114,114" transform="matrix(1,0,0,1,819,23)" stroke-linejoin="round" ed:type="summary"/><path id="138" stroke-width="2" fill="#808080" ed:parentid="139" stroke="#808080" d="M0.1,23C2.2,22.9,5.9,22.3,7,20.2C7.6,19,6.6,17.7,5.5,16.8C4.4,15.9,4.2,15.5,4.3,14.9C4.4,14.3,5.9,12.9,11.4,11.6C11.6,11.6,11.8,11.6,12,11.5C11.9,11.5,11.6,11.4,11.4,11.4C11.2,11.3,4.7,9.9,4.3,8.1C4.2,7.5,4.7,7,5.5,6.2C6.3,5.4,7.6,4.4,7,2.8C6.4,1.2,3.3,0.2,0,0C4.9,0.6,5.3,3,4.8,4.1C4.3,5.1,2.9,6.4,2.5,6.9C2.1,7.4,1.4,8.3,4.4,9.7C7.5,11,11.7,11.5,11.7,11.5C11.7,11.5,7,12.1,4.4,13.3C1.9,14.5,1.8,15.3,2.5,16.1C3.2,16.9,4.4,17.9,4.8,18.9C5.2,19.9,5.2,22.3,0.1,23z" ed:idlist="139" transform="matrix(1,0,0,1,1018,208)" stroke-linejoin="round" ed:type="summary"/><path id="144" stroke-width="2" fill="#808080" ed:parentid="145" stroke="#808080" d="M0.1,23C2.2,22.9,5.9,22.3,7,20.2C7.6,19,6.6,17.7,5.5,16.8C4.4,15.9,4.2,15.5,4.3,14.9C4.4,14.3,5.9,12.9,11.4,11.6C11.6,11.6,11.8,11.6,12,11.5C11.9,11.5,11.6,11.4,11.4,11.4C11.2,11.3,4.7,9.9,4.3,8.1C4.2,7.5,4.7,7,5.5,6.2C6.3,5.4,7.6,4.4,7,2.8C6.4,1.2,3.3,0.2,0,0C4.9,0.6,5.3,3,4.8,4.1C4.3,5.1,2.9,6.4,2.5,6.9C2.1,7.4,1.4,8.3,4.4,9.7C7.5,11,11.7,11.5,11.7,11.5C11.7,11.5,7,12.1,4.4,13.3C1.9,14.5,1.8,15.3,2.5,16.1C3.2,16.9,4.4,17.9,4.8,18.9C5.2,19.9,5.2,22.3,0.1,23z" ed:idlist="145" transform="matrix(1,0,0,1,981,245.5)" stroke-linejoin="round" ed:type="summary"/><path id="189" stroke-width="2" fill="#808080" ed:parentid="190,192,194" stroke="#808080" d="M0.1,82C2.2,81.5,5.9,79.5,7,72C7.6,67.9,6.6,63.1,5.5,59.9C4.4,56.7,4.2,55.1,4.3,53C4.4,50.9,5.9,45.9,11.4,41.5C11.6,41.3,11.8,41.2,12,41C11.9,40.9,11.6,40.6,11.4,40.5C11.2,40.3,4.7,35.2,4.3,29C4.2,26.9,4.7,24.8,5.5,22.1C6.3,19.4,7.6,15.6,7,10C6.4,4.3,3.3,0.7,0,0C4.9,2.2,5.3,10.7,4.8,14.5C4.3,18.3,2.9,22.9,2.5,24.6C2.1,26.4,1.4,29.6,4.4,34.5C7.5,39.4,11.7,41,11.7,41C11.7,41,7,43.2,4.4,47.5C1.9,51.8,1.8,54.7,2.5,57.4C3.2,60.1,4.4,64,4.8,67.5C5.2,70.9,5.2,79.6,0.1,82z" ed:idlist="190,192,194" transform="matrix(1,0,0,1,948,617.5)" stroke-linejoin="round" ed:type="summary"/><path id="104" stroke-width="2" fill="none" ed:parentid="102" stroke="#4486b1" d="M32,151.5L63.5,151.5L63.5,-145.5C63.5,-148.9,66.2,-151.5,69.5,-151.5L95,-151.5" transform="matrix(1,0,0,1,243,469.8)" ed:tosuperid="103" stroke-linecap="round" stroke-linejoin="round"/><path id="106" stroke-width="2" fill="none" ed:parentid="103" stroke="#4486b1" d="M-13.5,86.3L0,86.3L0,-80.3C0,-83.6,2.7,-86.3,6,-86.3L13.5,-86.3" transform="matrix(1,0,0,1,491.5,232)" ed:tosuperid="105" stroke-linecap="round" stroke-linejoin="round"/><path id="113" stroke-width="2" fill="none" ed:parentid="105" stroke="#4486b1" d="M-13.5,55.6L0,55.6L0,-49.6C0,-52.9,2.7,-55.6,6,-55.6L13.5,-55.6" transform="matrix(1,0,0,1,683.5,90.13)" ed:tosuperid="112" stroke-linecap="round" stroke-linejoin="round"/><path id="115" stroke-width="2" fill="none" ed:parentid="112" stroke="#4486b1" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" transform="matrix(1,0,0,1,756.5,34.5)" ed:tosuperid="114" stroke-linecap="round" stroke-linejoin="round"/><path id="117" stroke-width="2" fill="none" ed:parentid="105" stroke="#4486b1" d="M0,38.9L0,-32.9C0,-36.2,2.7,-38.9,6,-38.9L13.5,-38.9" transform="matrix(1,0,0,1,683.5,106.88)" ed:tosuperid="116" stroke-linecap="round" stroke-linejoin="round"/><path id="119" stroke-width="2" fill="none" ed:parentid="116" stroke="#4486b1" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" transform="matrix(1,0,0,1,761.5,68)" ed:tosuperid="118" stroke-linecap="round" stroke-linejoin="round"/><path id="121" stroke-width="2" fill="none" ed:parentid="105" stroke="#4486b1" d="M0,24.1L0,-18.1C0,-21.4,2.7,-24.1,6,-24.1L13.5,-24.1" transform="matrix(1,0,0,1,683.5,121.63)" ed:tosuperid="120" stroke-linecap="round" stroke-linejoin="round"/><path id="123" stroke-width="2" fill="none" ed:parentid="120" stroke="#4486b1" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" transform="matrix(1,0,0,1,745.5,97.5)" ed:tosuperid="122" stroke-linecap="round" stroke-linejoin="round"/><path id="125" stroke-width="2" fill="none" ed:parentid="105" stroke="#4486b1" d="M0,9.4L0,-3.4C0,-6.7,2.7,-9.4,6,-9.4L13.5,-9.4" transform="matrix(1,0,0,1,683.5,136.38)" ed:tosuperid="124" stroke-linecap="round" stroke-linejoin="round"/><path id="127" stroke-width="2" fill="none" ed:parentid="124" stroke="#4486b1" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" transform="matrix(1,0,0,1,757.5,127)" ed:tosuperid="126" stroke-linecap="round" stroke-linejoin="round"/><path id="129" stroke-width="2" fill="none" ed:parentid="105" stroke="#4486b1" d="M0,-5.4L0,-0.6C0,2.7,2.7,5.4,6,5.4L13.5,5.4" transform="matrix(1,0,0,1,683.5,151.13)" ed:tosuperid="128" stroke-linecap="round" stroke-linejoin="round"/><path id="131" stroke-width="2" fill="none" ed:parentid="128" stroke="#4486b1" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" transform="matrix(1,0,0,1,757.5,156.5)" ed:tosuperid="130" stroke-linecap="round" stroke-linejoin="round"/><path id="133" stroke-width="2" fill="none" ed:parentid="105" stroke="#4486b1" d="M0,-20.1L0,14.1C0,17.4,2.7,20.1,6,20.1L13.5,20.1" transform="matrix(1,0,0,1,683.5,165.88)" ed:tosuperid="132" stroke-linecap="round" stroke-linejoin="round"/><path id="135" stroke-width="2" fill="none" ed:parentid="132" stroke="#4486b1" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" transform="matrix(1,0,0,1,772.5,186)" ed:tosuperid="134" stroke-linecap="round" stroke-linejoin="round"/><path id="137" stroke-width="2" fill="none" ed:parentid="105" stroke="#4486b1" d="M0,-36.9L0,30.9C0,34.2,2.7,36.9,6,36.9L13.5,36.9" transform="matrix(1,0,0,1,683.5,182.63)" ed:tosuperid="136" stroke-linecap="round" stroke-linejoin="round"/><path id="140" stroke-width="2" fill="none" ed:parentid="136" stroke="#4486b1" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" transform="matrix(1,0,0,1,756.5,219.5)" ed:tosuperid="139" stroke-linecap="round" stroke-linejoin="round"/><path id="143" stroke-width="2" fill="none" ed:parentid="105" stroke="#4486b1" d="M0,-55.6L0,49.6C0,52.9,2.7,55.6,6,55.6L13.5,55.6" transform="matrix(1,0,0,1,683.5,201.38)" ed:tosuperid="142" stroke-linecap="round" stroke-linejoin="round"/><path id="146" stroke-width="2" fill="none" ed:parentid="142" stroke="#4486b1" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" transform="matrix(1,0,0,1,779.5,257)" ed:tosuperid="145" stroke-linecap="round" stroke-linejoin="round"/><path id="154" stroke-width="2" fill="none" ed:parentid="103" stroke="#4486b1" d="M0,-8.3L0,2.3C0,5.6,2.7,8.3,6,8.3L13.5,8.3" transform="matrix(1,0,0,1,491.5,326.5)" ed:tosuperid="153" stroke-linecap="round" stroke-linejoin="round"/><path id="156" stroke-width="2" fill="none" ed:parentid="153" stroke="#4486b1" d="M-13.5,22.1L0,22.1L0,-16.1C0,-19.4,2.7,-22.1,6,-22.1L13.5,-22.1" transform="matrix(1,0,0,1,587.5,312.63)" ed:tosuperid="155" stroke-linecap="round" stroke-linejoin="round"/><path id="158" stroke-width="2" fill="none" ed:parentid="153" stroke="#4486b1" d="M0,7.4L0,-1.4C0,-4.7,2.7,-7.4,6,-7.4L13.5,-7.4" transform="matrix(1,0,0,1,587.5,327.38)" ed:tosuperid="157" stroke-linecap="round" stroke-linejoin="round"/><path id="160" stroke-width="2" fill="none" ed:parentid="153" stroke="#4486b1" d="M0,-7.4L0,1.4C0,4.7,2.7,7.4,6,7.4L13.5,7.4" transform="matrix(1,0,0,1,587.5,342.13)" ed:tosuperid="159" stroke-linecap="round" stroke-linejoin="round"/><path id="162" stroke-width="2" fill="none" ed:parentid="153" stroke="#4486b1" d="M0,-22.1L0,16.1C0,19.4,2.7,22.1,6,22.1L13.5,22.1" transform="matrix(1,0,0,1,587.5,356.88)" ed:tosuperid="161" stroke-linecap="round" stroke-linejoin="round"/><path id="164" stroke-width="2" fill="none" ed:parentid="103" stroke="#4486b1" d="M0,-86.3L0,80.3C0,83.6,2.7,86.3,6,86.3L13.5,86.3" transform="matrix(1,0,0,1,491.5,404.5)" ed:tosuperid="163" stroke-linecap="round" stroke-linejoin="round"/><path id="166" stroke-width="2" fill="none" ed:parentid="163" stroke="#4486b1" d="M-13.5,33.8L0,33.8L0,-27.8C0,-31.1,2.7,-33.8,6,-33.8L13.5,-33.8" transform="matrix(1,0,0,1,643.5,457)" ed:tosuperid="165" stroke-linecap="round" stroke-linejoin="round"/><path id="168" stroke-width="2" fill="none" ed:parentid="165" stroke="#4486b1" d="M-13.5,7.4L0,7.4L0,-1.4C0,-4.7,2.7,-7.4,6,-7.4L13.5,-7.4" transform="matrix(1,0,0,1,775.5,415.88)" ed:tosuperid="167" stroke-linecap="round" stroke-linejoin="round"/><path id="170" stroke-width="2" fill="none" ed:parentid="165" stroke="#4486b1" d="M0,-7.4L0,1.4C0,4.7,2.7,7.4,6,7.4L13.5,7.4" transform="matrix(1,0,0,1,775.5,430.63)" ed:tosuperid="169" stroke-linecap="round" stroke-linejoin="round"/><path id="172" stroke-width="2" fill="none" ed:parentid="163" stroke="#4486b1" d="M0,2.1C0,-0.2,2.7,-2.1,6,-2.1L13.5,-2.1" transform="matrix(1,0,0,1,643.5,488.63)" ed:tosuperid="171" stroke-linecap="round" stroke-linejoin="round"/><path id="174" stroke-width="2" fill="none" ed:parentid="171" stroke="#4486b1" d="M-13.5,9.5L0,9.5L0,-3.5C0,-6.8,2.7,-9.5,6,-9.5L13.5,-9.5" transform="matrix(1,0,0,1,799.5,477)" ed:tosuperid="173" stroke-linecap="round" stroke-linejoin="round"/><path id="176" stroke-width="2" fill="none" ed:parentid="171" stroke="#4486b1" d="M0,-9.5L0,3.5C0,6.8,2.7,9.5,6,9.5L13.5,9.5" transform="matrix(1,0,0,1,799.5,496)" ed:tosuperid="175" stroke-linecap="round" stroke-linejoin="round"/><path id="178" stroke-width="2" fill="none" ed:parentid="163" stroke="#4486b1" d="M0,-33.8L0,27.8C0,31.1,2.7,33.8,6,33.8L13.5,33.8" transform="matrix(1,0,0,1,643.5,524.5)" ed:tosuperid="177" stroke-linecap="round" stroke-linejoin="round"/><path id="180" stroke-width="2" fill="none" ed:parentid="177" stroke="#4486b1" d="M-13.5,7.4L0,7.4L0,-1.4C0,-4.7,2.7,-7.4,6,-7.4L13.5,-7.4" transform="matrix(1,0,0,1,775.5,550.88)" ed:tosuperid="179" stroke-linecap="round" stroke-linejoin="round"/><path id="182" stroke-width="2" fill="none" ed:parentid="177" stroke="#4486b1" d="M0,-7.4L0,1.4C0,4.7,2.7,7.4,6,7.4L13.5,7.4" transform="matrix(1,0,0,1,775.5,565.63)" ed:tosuperid="181" stroke-linecap="round" stroke-linejoin="round"/><path id="184" stroke-width="2" fill="none" ed:parentid="102" stroke="#4486b1" d="M32,-151.5L63.5,-151.5L63.5,145.5C63.5,148.9,66.2,151.5,69.5,151.5L95,151.5" transform="matrix(1,0,0,1,243,772.89)" ed:tosuperid="183" stroke-linecap="round" stroke-linejoin="round"/><path id="186" stroke-width="2" fill="none" ed:parentid="183" stroke="#4486b1" d="M-13.5,111.8L0,111.8L0,-111.8L13.5,-111.8" transform="matrix(1,0,0,1,440.5,812.59)" ed:tosuperid="185" stroke-linecap="round" stroke-linejoin="round"/><path id="188" stroke-width="2" fill="none" ed:parentid="185" stroke="#4486b1" d="M-13.5,21.1L0,21.1L0,-15.1C0,-18.4,2.7,-21.1,6,-21.1L13.5,-21.1" transform="matrix(1,0,0,1,536.5,679.63)" ed:tosuperid="187" stroke-linecap="round" stroke-linejoin="round"/><path id="191" stroke-width="2" fill="none" ed:parentid="187" stroke="#4486b1" d="M-13.5,14.8L0,14.8L0,-8.8C0,-12.1,2.7,-14.8,6,-14.8L13.5,-14.8" transform="matrix(1,0,0,1,632.5,643.75)" ed:tosuperid="190" stroke-linecap="round" stroke-linejoin="round"/><path id="193" stroke-width="2" fill="none" ed:parentid="187" stroke="#4486b1" d="M0,0C0,0,2.7,0,6,0L13.5,0" transform="matrix(1,0,0,1,632.5,658.5)" ed:tosuperid="192" stroke-linecap="round" stroke-linejoin="round"/><path id="195" stroke-width="2" fill="none" ed:parentid="187" stroke="#4486b1" d="M0,-14.8L0,8.8C0,12.1,2.7,14.8,6,14.8L13.5,14.8" transform="matrix(1,0,0,1,632.5,673.25)" ed:tosuperid="194" stroke-linecap="round" stroke-linejoin="round"/><path id="198" stroke-width="2" fill="none" ed:parentid="185" stroke="#4486b1" d="M0,-21.1L0,15.1C0,18.4,2.7,21.1,6,21.1L13.5,21.1" transform="matrix(1,0,0,1,536.5,721.88)" ed:tosuperid="197" stroke-linecap="round" stroke-linejoin="round"/><path id="200" stroke-width="2" fill="none" ed:parentid="197" stroke="#4486b1" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" transform="matrix(1,0,0,1,632.5,743)" ed:tosuperid="199" stroke-linecap="round" stroke-linejoin="round"/><path id="202" stroke-width="2" fill="none" ed:parentid="199" stroke="#4486b1" d="M-13.5,0L0,0C0,0,2.7,0,6,0L13.5,0" transform="matrix(1,0,0,1,1100.5,743)" ed:tosuperid="201" stroke-linecap="round" stroke-linejoin="round"/><path id="204" stroke-width="2" fill="none" ed:parentid="183" stroke="#4486b1" d="M0,-111.8L0,111.8L13.5,111.8" transform="matrix(1,0,0,1,440.5,1036.28)" ed:tosuperid="203" stroke-linecap="round" stroke-linejoin="round"/><path id="206" stroke-width="2" fill="none" ed:parentid="203" stroke="#4486b1" d="M-13.5,123.4L0,123.4L0,-117.4C0,-120.7,2.7,-123.4,6,-123.4L13.5,-123.4" transform="matrix(1,0,0,1,548.5,1024.69)" ed:tosuperid="205" stroke-linecap="round" stroke-linejoin="round"/><path id="208" stroke-width="2" fill="none" ed:parentid="205" stroke="#4486b1" d="M-13.5,51.6L0,51.6L0,-45.6C0,-48.9,2.7,-51.6,6,-51.6L13.5,-51.6" transform="matrix(1,0,0,1,632.5,849.63)" ed:tosuperid="207" stroke-linecap="round" stroke-linejoin="round"/><path id="210" stroke-width="2" fill="none" ed:parentid="205" stroke="#4486b1" d="M0,36.9L0,-30.9C0,-34.2,2.7,-36.9,6,-36.9L13.5,-36.9" transform="matrix(1,0,0,1,632.5,864.38)" ed:tosuperid="209" stroke-linecap="round" stroke-linejoin="round"/><path id="212" stroke-width="2" fill="none" ed:parentid="205" stroke="#4486b1" d="M0,22.1L0,-16.1C0,-19.4,2.7,-22.1,6,-22.1L13.5,-22.1" transform="matrix(1,0,0,1,632.5,879.13)" ed:tosuperid="211" stroke-linecap="round" stroke-linejoin="round"/><path id="214" stroke-width="2" fill="none" ed:parentid="205" stroke="#4486b1" d="M0,7.4L0,-1.4C0,-4.7,2.7,-7.4,6,-7.4L13.5,-7.4" transform="matrix(1,0,0,1,632.5,893.88)" ed:tosuperid="213" stroke-linecap="round" stroke-linejoin="round"/><path id="216" stroke-width="2" fill="none" ed:parentid="205" stroke="#4486b1" d="M0,-7.4L0,1.4C0,4.7,2.7,7.4,6,7.4L13.5,7.4" transform="matrix(1,0,0,1,632.5,908.63)" ed:tosuperid="215" stroke-linecap="round" stroke-linejoin="round"/><path id="218" stroke-width="2" fill="none" ed:parentid="205" stroke="#4486b1" d="M0,-22.1L0,16.1C0,19.4,2.7,22.1,6,22.1L13.5,22.1" transform="matrix(1,0,0,1,632.5,923.38)" ed:tosuperid="217" stroke-linecap="round" stroke-linejoin="round"/><path id="220" stroke-width="2" fill="none" ed:parentid="205" stroke="#4486b1" d="M0,-36.9L0,30.9C0,34.2,2.7,36.9,6,36.9L13.5,36.9" transform="matrix(1,0,0,1,632.5,938.13)" ed:tosuperid="219" stroke-linecap="round" stroke-linejoin="round"/><path id="222" stroke-width="2" fill="none" ed:parentid="205" stroke="#4486b1" d="M0,-51.6L0,45.6C0,48.9,2.7,51.6,6,51.6L13.5,51.6" transform="matrix(1,0,0,1,632.5,952.88)" ed:tosuperid="221" stroke-linecap="round" stroke-linejoin="round"/><path id="224" stroke-width="2" fill="none" ed:parentid="203" stroke="#4486b1" d="M0,49.7L0,-43.7C0,-47,2.7,-49.7,6,-49.7L13.5,-49.7" transform="matrix(1,0,0,1,548.5,1098.44)" ed:tosuperid="223" stroke-linecap="round" stroke-linejoin="round"/><path id="226" stroke-width="2" fill="none" ed:parentid="223" stroke="#4486b1" d="M-13.5,7.4L0,7.4L0,-1.4C0,-4.7,2.7,-7.4,6,-7.4L13.5,-7.4" transform="matrix(1,0,0,1,620.5,1041.38)" ed:tosuperid="225" stroke-linecap="round" stroke-linejoin="round"/><path id="228" stroke-width="2" fill="none" ed:parentid="223" stroke="#4486b1" d="M0,-7.4L0,1.4C0,4.7,2.7,7.4,6,7.4L13.5,7.4" transform="matrix(1,0,0,1,620.5,1056.13)" ed:tosuperid="227" stroke-linecap="round" stroke-linejoin="round"/><path id="230" stroke-width="2" fill="none" ed:parentid="203" stroke="#4486b1" d="M0,20.2L0,-14.2C0,-17.5,2.7,-20.2,6,-20.2L13.5,-20.2" transform="matrix(1,0,0,1,548.5,1127.94)" ed:tosuperid="229" stroke-linecap="round" stroke-linejoin="round"/><path id="232" stroke-width="2" fill="none" ed:parentid="229" stroke="#4486b1" d="M-13.5,7.4L0,7.4L0,-1.4C0,-4.7,2.7,-7.4,6,-7.4L13.5,-7.4" transform="matrix(1,0,0,1,620.5,1100.38)" ed:tosuperid="231" stroke-linecap="round" stroke-linejoin="round"/><path id="234" stroke-width="2" fill="none" ed:parentid="229" stroke="#4486b1" d="M0,-7.4L0,1.4C0,4.7,2.7,7.4,6,7.4L13.5,7.4" transform="matrix(1,0,0,1,620.5,1115.13)" ed:tosuperid="233" stroke-linecap="round" stroke-linejoin="round"/><path id="236" stroke-width="2" fill="none" ed:parentid="203" stroke="#4486b1" d="M0,-19.9L0,13.9C0,17.2,2.7,19.9,6,19.9L13.5,19.9" transform="matrix(1,0,0,1,548.5,1168.06)" ed:tosuperid="235" stroke-linecap="round" stroke-linejoin="round"/><path id="238" stroke-width="2" fill="none" ed:parentid="235" stroke="#4486b1" d="M-13.5,13.8L0,13.8L0,-7.8C0,-11.1,2.7,-13.8,6,-13.8L13.5,-13.8" transform="matrix(1,0,0,1,704.5,1174.25)" ed:tosuperid="237" stroke-linecap="round" stroke-linejoin="round"/><path id="240" stroke-width="2" fill="none" ed:parentid="235" stroke="#4486b1" d="M0,-13.8L0,7.8C0,11.1,2.7,13.8,6,13.8L13.5,13.8" transform="matrix(1,0,0,1,704.5,1201.75)" ed:tosuperid="239" stroke-linecap="round" stroke-linejoin="round"/><path id="242" stroke-width="2" fill="none" ed:parentid="203" stroke="#4486b1" d="M0,-73.8L0,67.8C0,71.1,2.7,73.8,6,73.8L13.5,73.8" transform="matrix(1,0,0,1,548.5,1221.94)" ed:tosuperid="241" stroke-linecap="round" stroke-linejoin="round"/><path id="244" stroke-width="2" fill="none" ed:parentid="241" stroke="#4486b1" d="M-13.5,16.9L0,16.9L0,-10.9C0,-14.2,2.7,-16.9,6,-16.9L13.5,-16.9" transform="matrix(1,0,0,1,704.5,1278.88)" ed:tosuperid="243" stroke-linecap="round" stroke-linejoin="round"/><path id="246" stroke-width="2" fill="none" ed:parentid="241" stroke="#4486b1" d="M0,2.1C0,-0.2,2.7,-2.1,6,-2.1L13.5,-2.1" transform="matrix(1,0,0,1,704.5,1293.63)" ed:tosuperid="245" stroke-linecap="round" stroke-linejoin="round"/><path id="248" stroke-width="2" fill="none" ed:parentid="241" stroke="#4486b1" d="M0,-16.9L0,10.9C0,14.2,2.7,16.9,6,16.9L13.5,16.9" transform="matrix(1,0,0,1,704.5,1312.63)" ed:tosuperid="247" stroke-linecap="round" stroke-linejoin="round"/><path id="250" stroke-width="2" fill="none" ed:parentid="203" stroke="#4486b1" d="M0,-123.4L0,117.4C0,120.7,2.7,123.4,6,123.4L13.5,123.4" transform="matrix(1,0,0,1,548.5,1271.56)" ed:tosuperid="249" stroke-linecap="round" stroke-linejoin="round"/><path id="252" stroke-width="2" fill="none" ed:parentid="249" stroke="#4486b1" d="M-13.5,9.5L0,9.5L0,-3.5C0,-6.8,2.7,-9.5,6,-9.5L13.5,-9.5" transform="matrix(1,0,0,1,716.5,1385.5)" ed:tosuperid="251" stroke-linecap="round" stroke-linejoin="round"/><path id="254" stroke-width="2" fill="none" ed:parentid="249" stroke="#4486b1" d="M0,-9.5L0,3.5C0,6.8,2.7,9.5,6,9.5L13.5,9.5" transform="matrix(1,0,0,1,716.5,1404.5)" ed:tosuperid="253" stroke-linecap="round" stroke-linejoin="round"/><g id="102" ed:width="254" transform="matrix(1,0,0,1,21,590.34)" ed:layout="rightmap" ed:height="62" ed:topictype="mainidea"><path fill="#b3a2c7" stroke="#475d74" d="M4,0L250,0C252.7,0,254,1.3,254,4L254,58C254,60.7,252.7,62,250,62L4,62C1.3,62,0,60.7,0,58L0,4C0,1.3,1.3,0,4,0z" stroke-linejoin="round"/><text class="st1"><tspan textLength="208" y="39.7" style="white-space:pre" x="20">Java 基本数据类型</tspan></text></g><g id="103" ed:parentid="102" ed:width="140" transform="matrix(1,0,0,1,338,298.25)" ed:height="40"><path fill="#72cdf9" stroke="#475d74" d="M4,0L136,0C138.7,0,140,1.3,140,4L140,36C140,38.7,138.7,40,136,40L4,40C1.3,40,0,38.7,0,36L0,4C0,1.3,1.3,0,4,0z" stroke-linejoin="round"/><text class="st2"><tspan textLength="102" y="24.7" style="white-space:pre" x="18">数据类型分类</tspan></text></g><g id="105" ed:parentid="103" ed:width="165" transform="matrix(1,0,0,1,505,134.25)" ed:height="23"><text class="st3"><tspan textLength="144" y="14.7" style="white-space:pre" x="9">值类型（即基本数据类型）</tspan></text></g><g id="112" ed:parentid="105" ed:width="46" transform="matrix(1,0,0,1,697,23)" ed:height="23"><text class="st3"><tspan textLength="25" y="14.7" style="white-space:pre" x="9">byte</tspan></text></g><g id="114" ed:parentid="112" ed:width="44" transform="matrix(1,0,0,1,770,23)" ed:height="23"><text class="st3"><tspan textLength="23" y="14.7" style="white-space:pre" x="9">8 位</tspan></text></g><g id="116" ed:parentid="105" ed:width="51" transform="matrix(1,0,0,1,697,56.5)" ed:height="23"><text class="st3"><tspan textLength="30" y="14.7" style="white-space:pre" x="9">short</tspan></text></g><g id="118" ed:parentid="116" ed:width="51" transform="matrix(1,0,0,1,775,56.5)" ed:height="23"><text class="st3"><tspan textLength="30" y="14.7" style="white-space:pre" x="9">16 位</tspan></text></g><g id="120" ed:parentid="105" ed:width="35" transform="matrix(1,0,0,1,697,86)" ed:height="23"><text class="st3"><tspan textLength="14" y="14.7" style="white-space:pre" x="9">int</tspan></text></g><g id="122" ed:parentid="120" ed:width="51" transform="matrix(1,0,0,1,759,86)" ed:height="23"><text class="st3"><tspan textLength="30" y="14.7" style="white-space:pre" x="9">32 位</tspan></text></g><g id="124" ed:parentid="105" ed:width="47" transform="matrix(1,0,0,1,697,115.5)" ed:height="23"><text class="st3"><tspan textLength="26" y="14.7" style="white-space:pre" x="9">long</tspan></text></g><g id="126" ed:parentid="124" ed:width="240" transform="matrix(1,0,0,1,771,115.5)" ed:height="23"><text class="st3"><tspan textLength="219" y="14.7" style="white-space:pre" x="9">64 位。赋值时一般在数字后加上 l 或 L。</tspan></text></g><g id="128" ed:parentid="105" ed:width="47" transform="matrix(1,0,0,1,697,145)" ed:height="23"><text class="st3"><tspan textLength="26" y="14.7" style="white-space:pre" x="9">float</tspan></text></g><g id="130" ed:parentid="128" ed:width="265" transform="matrix(1,0,0,1,771,145)" ed:height="23"><text class="st3"><tspan textLength="244" y="14.7" style="white-space:pre" x="9">32 位。直接赋值时必须在数字后加上 f 或 F。</tspan></text></g><g id="132" ed:parentid="105" ed:width="62" transform="matrix(1,0,0,1,697,174.5)" ed:height="23"><text class="st3"><tspan textLength="41" y="14.7" style="white-space:pre" x="9">double</tspan></text></g><g id="134" ed:parentid="132" ed:width="240" transform="matrix(1,0,0,1,786,174.5)" ed:height="23"><text class="st3"><tspan textLength="219" y="14.7" style="white-space:pre" x="9">64 位，赋值时一般在数字后加 d 或 D 。</tspan></text></g><g id="136" ed:parentid="105" ed:width="46" transform="matrix(1,0,0,1,697,208)" ed:height="23"><text class="st3"><tspan textLength="25" y="14.7" style="white-space:pre" x="9">char</tspan></text></g><g id="139" ed:parentid="136" ed:width="243" transform="matrix(1,0,0,1,770,208)" ed:height="23"><text class="st3"><tspan textLength="222" y="14.7" style="white-space:pre" x="9">16 位，存储Unicode码，用单引号赋值。</tspan></text></g><g id="141" ed:parentid="138" ed:width="64" transform="matrix(1,0,0,1,1036,204)" ed:layout="rightmap" ed:height="31"><text class="st4"><tspan textLength="45" y="20.7" style="white-space:pre" x="7">字符型</tspan></text></g><g id="142" ed:parentid="105" ed:width="69" transform="matrix(1,0,0,1,697,245.5)" ed:height="23"><text class="st3"><tspan textLength="48" y="14.7" style="white-space:pre" x="9">boolean</tspan></text></g><g id="145" ed:parentid="142" ed:width="183" transform="matrix(1,0,0,1,793,245.5)" ed:height="23"><text class="st3"><tspan textLength="162" y="14.7" style="white-space:pre" x="9">只有 true 和 false 两个取值。</tspan></text></g><g id="147" ed:parentid="144" ed:width="64" transform="matrix(1,0,0,1,999,241.5)" ed:layout="rightmap" ed:height="31"><text class="st4"><tspan textLength="45" y="20.7" style="white-space:pre" x="7">布尔型</tspan></text></g><g id="150" ed:parentid="109" ed:width="64" transform="matrix(1,0,0,1,1034,82)" ed:layout="rightmap" ed:height="31"><text class="st4"><tspan textLength="45" y="20.7" style="white-space:pre" x="7">整数型</tspan></text></g><g id="151" ed:parentid="110" ed:width="64" transform="matrix(1,0,0,1,1059,155.75)" ed:layout="rightmap" ed:height="31"><text class="st4"><tspan textLength="45" y="20.7" style="white-space:pre" x="7">浮点型</tspan></text></g><g id="152" ed:parentid="111" ed:width="64" transform="matrix(1,0,0,1,837,19)" ed:layout="rightmap" ed:height="31"><text class="st4"><tspan textLength="45" y="20.7" style="white-space:pre" x="7">字节型</tspan></text></g><g id="153" ed:parentid="103" ed:width="69" transform="matrix(1,0,0,1,505,323.25)" ed:height="23"><text class="st3"><tspan textLength="48" y="14.7" style="white-space:pre" x="9">引用类型</tspan></text></g><g id="155" ed:parentid="153" ed:width="45" transform="matrix(1,0,0,1,601,279)" ed:height="23"><text class="st3"><tspan textLength="24" y="14.7" style="white-space:pre" x="9">数组</tspan></text></g><g id="157" ed:parentid="153" ed:width="69" transform="matrix(1,0,0,1,601,308.5)" ed:height="23"><text class="st3"><tspan textLength="48" y="14.7" style="white-space:pre" x="9">类(class)</tspan></text></g><g id="159" ed:parentid="153" ed:width="103" transform="matrix(1,0,0,1,601,338)" ed:height="23"><text class="st3"><tspan textLength="82" y="14.7" style="white-space:pre" x="9">接口(interface)</tspan></text></g><g id="161" ed:parentid="153" ed:width="85" transform="matrix(1,0,0,1,601,367.5)" ed:height="23"><text class="st3"><tspan textLength="64" y="14.7" style="white-space:pre" x="9">枚举(enum)</tspan></text></g><g id="163" ed:parentid="103" ed:width="125" transform="matrix(1,0,0,1,505,479.25)" ed:height="23"><text class="st3"><tspan textLength="104" y="14.7" style="white-space:pre" x="9">值类型 vs 引用类型</tspan></text></g><g id="165" ed:parentid="163" ed:width="105" transform="matrix(1,0,0,1,657,411.75)" ed:height="23"><text class="st3"><tspan textLength="84" y="14.7" style="white-space:pre" x="9">从概念方面来说</tspan></text></g><g id="167" ed:parentid="165" ed:width="213" transform="matrix(1,0,0,1,789,397)" ed:height="23"><text class="st3"><tspan textLength="192" y="14.7" style="white-space:pre" x="9">基本类型：变量名指向具体的数值。</tspan></text></g><g id="169" ed:parentid="165" ed:width="273" transform="matrix(1,0,0,1,789,426.5)" ed:height="23"><text class="st3"><tspan textLength="252" y="14.7" style="white-space:pre" x="9">引用类型：变量名指向存数据对象的内存地址。</tspan></text></g><g id="171" ed:parentid="163" ed:width="129" transform="matrix(1,0,0,1,657,475)" ed:height="23"><text class="st3"><tspan textLength="108" y="14.7" style="white-space:pre" x="9">从内存构建方面来说</tspan></text></g><g id="173" ed:parentid="171" ed:width="360" transform="matrix(1,0,0,1,813,456)" ed:height="23"><text class="st3"><tspan textLength="339" y="14.7" style="white-space:pre" x="9">基本类型：变量在声明之后，java 就会立刻分配给他内存空间。</tspan></text></g><g id="175" ed:parentid="171" ed:width="517" transform="matrix(1,0,0,1,813,485.5)" ed:height="40"><text class="st3"><tspan textLength="496" y="14.7" style="white-space:pre" x="9">引用类型：它以特殊的方式（类似 C 指针）向对象实体（具体的值），这类变量声明时不会分</tspan><tspan textLength="96" y="31.7" style="white-space:pre" x="9">配内存，只是存储</tspan></text></g><g id="177" ed:parentid="163" ed:width="105" transform="matrix(1,0,0,1,657,546.75)" ed:height="23"><text class="st3"><tspan textLength="84" y="14.7" style="white-space:pre" x="9">从使用方面来说</tspan></text></g><g id="179" ed:parentid="177" ed:width="326" transform="matrix(1,0,0,1,789,532)" ed:height="23"><text class="st3"><tspan textLength="305" y="14.7" style="white-space:pre" x="9">基本类型：使用时需要赋具体值,判断时使用 “==” 号。</tspan></text></g><g id="181" ed:parentid="177" ed:width="331" transform="matrix(1,0,0,1,789,561.5)" ed:height="23"><text class="st3"><tspan textLength="310" y="14.7" style="white-space:pre" x="9">引用类型：使用时可以赋 null，判断时使用 equals 方法。</tspan></text></g><g id="183" ed:parentid="102" ed:width="89" transform="matrix(1,0,0,1,338,904.44)" ed:height="40"><path fill="#72cdf9" stroke="#475d74" d="M4,0L85,0C87.7,0,89,1.3,89,4L89,36C89,38.7,87.7,40,85,40L4,40C1.3,40,0,38.7,0,36L0,4C0,1.3,1.3,0,4,0z" stroke-linejoin="round"/><text class="st2"><tspan textLength="51" y="24.7" style="white-space:pre" x="18">值类型</tspan></text></g><g id="185" ed:parentid="183" ed:width="69" transform="matrix(1,0,0,1,454,689.25)" ed:height="23"><text class="st3"><tspan textLength="48" y="14.7" style="white-space:pre" x="9">数据转换</tspan></text></g><g id="187" ed:parentid="185" ed:width="69" transform="matrix(1,0,0,1,550,647)" ed:height="23"><text class="st3"><tspan textLength="48" y="14.7" style="white-space:pre" x="9">自动转换</tspan></text></g><g id="190" ed:parentid="187" ed:width="189" transform="matrix(1,0,0,1,646,617.5)" ed:height="23"><text class="st3"><tspan textLength="168" y="14.7" style="white-space:pre" x="9">由“小”数据转换为“大”数据</tspan></text></g><g id="192" ed:parentid="187" ed:width="165" transform="matrix(1,0,0,1,646,647)" ed:height="23"><text class="st3"><tspan textLength="144" y="14.7" style="white-space:pre" x="9">转换前后的数据类型要兼容</tspan></text></g><g id="194" ed:parentid="187" ed:width="297" transform="matrix(1,0,0,1,646,676.5)" ed:height="23"><text class="st3"><tspan textLength="276" y="14.7" style="white-space:pre" x="9">整型类型和浮点型进行计算后，结果会转为浮点类型</tspan></text></g><g id="196" ed:parentid="189" ed:width="307" transform="matrix(1,0,0,1,966,643)" ed:layout="rightmap" ed:height="31"><text class="st4"><tspan textLength="290" y="20.7" style="white-space:pre" x="7">符合这些条件，则JAVA将会自动做类型转换</tspan></text></g><g id="197" ed:parentid="185" ed:width="69" transform="matrix(1,0,0,1,550,731.5)" ed:height="23"><text class="st3"><tspan textLength="48" y="14.7" style="white-space:pre" x="9">强制转换</tspan></text></g><g id="199" ed:parentid="197" ed:width="441" transform="matrix(1,0,0,1,646,723)" ed:height="40"><text class="st3"><tspan textLength="420" y="14.7" style="white-space:pre" x="9">在不符合自动转换条件时或者根据用户的需要，可以对数据类型做强制的转换。</tspan><tspan textLength="398" y="31.7" style="white-space:pre" x="9">转换方式为：在数值的前面用一个括号 "()" 把要强制转换的类型标注出来。</tspan></text></g><g id="201" ed:parentid="199" ed:width="191" transform="matrix(1,0,0,1,1114,706)" ed:height="74"><path fill="none" stroke="#4486b1" d="M0,0L191,0L191,74L0,74L0,0z" stroke-linejoin="round"/><text class="st3"><tspan textLength="86" y="14.7" style="white-space:pre" x="9">// 强制转换示例</tspan><tspan textLength="82" y="31.7" style="white-space:pre" x="9">float f = 25.5f;</tspan><tspan textLength="70" y="48.7" style="white-space:pre" x="9">int x = (int)f;</tspan><tspan textLength="170" y="65.7" style="white-space:pre" x="9">System.out.println("x = " + x);</tspan></text></g><g id="203" ed:parentid="183" ed:width="81" transform="matrix(1,0,0,1,454,1136.63)" ed:height="23"><text class="st3"><tspan textLength="60" y="14.7" style="white-space:pre" x="9">装箱和拆箱</tspan></text></g><g id="205" ed:parentid="203" ed:width="57" transform="matrix(1,0,0,1,562,889.75)" ed:height="23"><text class="st3"><tspan textLength="36" y="14.7" style="white-space:pre" x="9">包装类</tspan></text></g><g id="207" ed:parentid="205" ed:width="102" transform="matrix(1,0,0,1,646,786.5)" ed:height="23"><text class="st3"><tspan textLength="81" y="14.7" style="white-space:pre" x="9">Byte &lt;-> byte</tspan></text></g><g id="209" ed:parentid="205" ed:width="113" transform="matrix(1,0,0,1,646,816)" ed:height="23"><text class="st3"><tspan textLength="92" y="14.7" style="white-space:pre" x="9">Short &lt;-> short</tspan></text></g><g id="211" ed:parentid="205" ed:width="108" transform="matrix(1,0,0,1,646,845.5)" ed:height="23"><text class="st3"><tspan textLength="87" y="14.7" style="white-space:pre" x="9">Integer &lt;-> int</tspan></text></g><g id="213" ed:parentid="205" ed:width="107" transform="matrix(1,0,0,1,646,875)" ed:height="23"><text class="st3"><tspan textLength="86" y="14.7" style="white-space:pre" x="9">Long &lt;-> long</tspan></text></g><g id="215" ed:parentid="205" ed:width="106" transform="matrix(1,0,0,1,646,904.5)" ed:height="23"><text class="st3"><tspan textLength="85" y="14.7" style="white-space:pre" x="9">Float &lt;-> float</tspan></text></g><g id="217" ed:parentid="205" ed:width="135" transform="matrix(1,0,0,1,646,934)" ed:height="23"><text class="st3"><tspan textLength="114" y="14.7" style="white-space:pre" x="9">Double &lt;-> double</tspan></text></g><g id="219" ed:parentid="205" ed:width="133" transform="matrix(1,0,0,1,646,963.5)" ed:height="23"><text class="st3"><tspan textLength="112" y="14.7" style="white-space:pre" x="9">Character &lt;-> char</tspan></text></g><g id="221" ed:parentid="205" ed:width="148" transform="matrix(1,0,0,1,646,993)" ed:height="23"><text class="st3"><tspan textLength="127" y="14.7" style="white-space:pre" x="9">Boolean &lt;-> boolean</tspan></text></g><g id="223" ed:parentid="203" ed:width="45" transform="matrix(1,0,0,1,562,1037.25)" ed:height="23"><text class="st3"><tspan textLength="24" y="14.7" style="white-space:pre" x="9">装箱</tspan></text></g><g id="225" ed:parentid="223" ed:width="377" transform="matrix(1,0,0,1,634,1022.5)" ed:height="23"><text class="st3"><tspan textLength="356" y="14.7" style="white-space:pre" x="9">装箱（boxing）是将值类型转换为引用类型。例如：int 转 Integer</tspan></text></g><g id="227" ed:parentid="223" ed:width="301" transform="matrix(1,0,0,1,634,1052)" ed:height="23"><text class="st3"><tspan textLength="280" y="14.7" style="white-space:pre" x="9">装箱过程是通过调用包装类的 valueOf 方法实现的。</tspan></text></g><g id="229" ed:parentid="203" ed:width="45" transform="matrix(1,0,0,1,562,1096.25)" ed:height="23"><text class="st3"><tspan textLength="24" y="14.7" style="white-space:pre" x="9">拆箱</tspan></text></g><g id="231" ed:parentid="229" ed:width="391" transform="matrix(1,0,0,1,634,1081.5)" ed:height="23"><text class="st3"><tspan textLength="370" y="14.7" style="white-space:pre" x="9">拆箱（unboxing）是将引用类型转换为值类型。例如：Integer 转 int</tspan></text></g><g id="233" ed:parentid="229" ed:width="497" transform="matrix(1,0,0,1,634,1111)" ed:height="23"><text class="st3"><tspan textLength="476" y="14.7" style="white-space:pre" x="9">拆箱过程是通过调用包装类的 xxxValue 方法实现的。（xxx 代表对应的基本数据类型）。</tspan></text></g><g id="235" ed:parentid="203" ed:width="129" transform="matrix(1,0,0,1,562,1176.5)" ed:height="23"><text class="st3"><tspan textLength="108" y="14.7" style="white-space:pre" x="9">自动装箱、自动拆箱</tspan></text></g><g id="237" ed:parentid="235" ed:width="517" transform="matrix(1,0,0,1,718,1140.5)" ed:height="40"><text class="st3"><tspan textLength="489" y="14.7" style="white-space:pre" x="9">自动装箱与拆箱的机制可以让我们在 Java 的变量赋值或者是方法调用等情况下使用原始类型</tspan><tspan textLength="156" y="31.7" style="white-space:pre" x="9">或者对象类型更加简单直接。</tspan></text></g><g id="239" ed:parentid="235" ed:width="517" transform="matrix(1,0,0,1,718,1187)" ed:height="57"><text class="st3"><tspan textLength="496" y="14.7" style="white-space:pre" x="9">因为自动装箱会隐式地创建对象，如果在一个循环体中，会创建无用的中间对象，这样会增加 </tspan><tspan textLength="489" y="31.7" style="white-space:pre" x="9">GC 压力，拉低程序的性能。所以在写循环时一定要注意代码，避免引入不必要的自动装箱操</tspan><tspan textLength="24" y="48.7" style="white-space:pre" x="9">作。</tspan></text></g><g id="241" ed:parentid="203" ed:width="129" transform="matrix(1,0,0,1,562,1284.25)" ed:height="23"><text class="st3"><tspan textLength="108" y="14.7" style="white-space:pre" x="9">装箱、拆箱应用场景</tspan></text></g><g id="243" ed:parentid="241" ed:width="175" transform="matrix(1,0,0,1,718,1250.5)" ed:height="23"><text class="st3"><tspan textLength="154" y="14.7" style="white-space:pre" x="9">含类型为 Object 参数的方法</tspan></text></g><g id="245" ed:parentid="241" ed:width="93" transform="matrix(1,0,0,1,718,1280)" ed:height="23"><text class="st3"><tspan textLength="72" y="14.7" style="white-space:pre" x="9">非泛型的容器</tspan></text></g><g id="247" ed:parentid="241" ed:width="517" transform="matrix(1,0,0,1,718,1309.5)" ed:height="40"><text class="st3"><tspan textLength="494" y="14.7" style="white-space:pre" x="9">当 == 运算符的两个操作，一个操作数是包装类，另一个操作数是表达式（即包含算术运算）</tspan><tspan textLength="252" y="31.7" style="white-space:pre" x="9">则比较的是数值（即会触发自动拆箱的过程）。</tspan></text></g><g id="249" ed:parentid="203" ed:width="141" transform="matrix(1,0,0,1,562,1383.5)" ed:height="23"><text class="st3"><tspan textLength="120" y="14.7" style="white-space:pre" x="9">装箱、拆箱应用注意点</tspan></text></g><g id="251" ed:parentid="249" ed:width="517" transform="matrix(1,0,0,1,730,1356)" ed:height="40"><text class="st3"><tspan textLength="492" y="14.7" style="white-space:pre" x="9">装箱操作会创建对象，频繁的装箱操作会造成不必要的内存消耗，影响性能。所以应该尽量避</tspan><tspan textLength="48" y="31.7" style="white-space:pre" x="9">免装箱。</tspan></text></g><g id="253" ed:parentid="249" ed:width="413" transform="matrix(1,0,0,1,730,1402.5)" ed:height="23"><text class="st3"><tspan textLength="392" y="14.7" style="white-space:pre" x="9">基础数据类型的比较操作使用 ==，包装类的比较操作使用 equals 方法。</tspan></text></g></svg>